*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755332489182
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755332980688
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755333080565
*1
$4
EXEC
*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$3426
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"]], "answer": ["1", "1", "1", "1", "1", "1"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755391351587
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$13072
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755391894238
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$22204
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "구조적 설계의 주요 목표는 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "객체지향 프로그래밍에서 클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 합니까?", "소프트웨어 개발에서 모듈화의 원리에 해당하는 것은?", "소프트웨어 개발 프로세스 성숙도 모델의 단계 중 정의된 프로세스 수행 및 수행을 의미하는 단계는?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "뷰(VIEW)를 정의할 때에 필요한 명령어는?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "데이터 모델의 구성 요소에 포함되지 않는 것은 무엇입니까?", "클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 하는가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 빌드 도구(Build Tool)의 종류가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론은 무엇인가?", "네트워크 구성 형태 중 연결되는 중앙 집중식의 네트워크 구성 형태는 무엇인가?", "소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형은 무엇인가?", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 무엇인가?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 개발 프로세스", "3. 소프트웨어 개발 도구", "4. 소프트웨어 개발 테스트"], ["1. 시스템의 요구사항을 분석하는 것", "2. 시스템의 구조를 설계하는 것", "3. 시스템의 테스트 계획을 수립하는 것", "4. 시스템의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 상속", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 자료와 오퍼레이션을 함께 정의한다.", "2. 자료와 오퍼레이션을 분리한다.", "3. 클래스를 재정의 한다.", "4. 객체를 지향한다."], ["1. Initial", "2. Managed", "3. Established", "4. Optimizing"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. CREATE TABLE", "2. CREATE VIEW", "3. ALTER TABLE", "4. DROP TABLE"], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 데이터베이스, 테이블, 뷰", "3. DBMS, SQL, 쿼리", "4. 데이터, 인덱스, 로그"], ["1. 프로시저(Procedure)", "2. 데이터 사전", "3. 데이터 접근 권한", "4. 그룹 함수"], ["1. 상속성", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 유연성과 확장성을 제공한다"], ["1. 소프트웨어 개발 방법론", "2. 구조적 분석", "3. 객체지향 프로그래밍", "4. 프로세스"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Eclipse", "4. Makefile"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 생명주기 모형", "3. 소프트웨어 공학", "4. 시스템 개발 방법론"], ["1. 구조적 방법론", "2. 객체지향 방법론", "3. 애자일 방법론", "4. 소프트웨어 생명주기 모형"], ["1. 버스 구조", "2. 스타 구조", "3. 링 구조", "4. 메쉬 구조"], ["1. 폭포수 모형", "2. 프로토타입 모형", "3. 나선형 모형", "4. V-모형"], ["1. 네트워크 공격", "2. 시스템 취약점", "3. 오류", "4. 관리 오류"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2", "1", "2", "1", "1", "1", "4", "1", "1", "1", "1", "4", "2", "2", "1", "4", "1", "4", "1", "4", "3", "1", "1", "2", "1", "4"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 합니다.", "구조적 설계의 주요 목표는 시스템의 구조를 설계하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "소프트웨어 개발 방법론은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것입니다.", "상속은 클래스가 재정의 없이 물려받아 사용하는 것입니다.", "모듈화의 원리는 자료에 적용 가능한 오퍼레이션을 함께 정의하는 것입니다.", "Initial 단계는 정의된 프로세스 수행 및 수행을 의미합니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "뷰를 정의할 때에 CREATE VIEW 명령어를 사용한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "그룹 함수는 데이터 모델의 구성 요소가 아니다.", "클래스가 재정의 없이 물려받아 사용하는 것을 상속성이라고 한다.", "절차적 프로그래밍 언어는 정해진 규칙이 있고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 유연성과 확장성을 제공하는 것은 객체지향 프로그래밍 언어의 특징이다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향 프로그래밍 언어의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향 프로그래밍 언어의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)의 일종이며, 빌드 도구(Build Tool)는 Gradle, Jenkins, Makefile 등이 있다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "스타 구조는 연결되는 중앙 집중식의 네트워크 구성 형태이다.", "폭포수 모형은 소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형이다.", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 관리 오류에 해당한다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755392442202
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$22204
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "구조적 설계의 주요 목표는 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "객체지향 프로그래밍에서 클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 합니까?", "소프트웨어 개발에서 모듈화의 원리에 해당하는 것은?", "소프트웨어 개발 프로세스 성숙도 모델의 단계 중 정의된 프로세스 수행 및 수행을 의미하는 단계는?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "뷰(VIEW)를 정의할 때에 필요한 명령어는?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "데이터 모델의 구성 요소에 포함되지 않는 것은 무엇입니까?", "클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 하는가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 빌드 도구(Build Tool)의 종류가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론은 무엇인가?", "네트워크 구성 형태 중 연결되는 중앙 집중식의 네트워크 구성 형태는 무엇인가?", "소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형은 무엇인가?", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 무엇인가?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 개발 프로세스", "3. 소프트웨어 개발 도구", "4. 소프트웨어 개발 테스트"], ["1. 시스템의 요구사항을 분석하는 것", "2. 시스템의 구조를 설계하는 것", "3. 시스템의 테스트 계획을 수립하는 것", "4. 시스템의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 상속", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 자료와 오퍼레이션을 함께 정의한다.", "2. 자료와 오퍼레이션을 분리한다.", "3. 클래스를 재정의 한다.", "4. 객체를 지향한다."], ["1. Initial", "2. Managed", "3. Established", "4. Optimizing"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. CREATE TABLE", "2. CREATE VIEW", "3. ALTER TABLE", "4. DROP TABLE"], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 데이터베이스, 테이블, 뷰", "3. DBMS, SQL, 쿼리", "4. 데이터, 인덱스, 로그"], ["1. 프로시저(Procedure)", "2. 데이터 사전", "3. 데이터 접근 권한", "4. 그룹 함수"], ["1. 상속성", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 유연성과 확장성을 제공한다"], ["1. 소프트웨어 개발 방법론", "2. 구조적 분석", "3. 객체지향 프로그래밍", "4. 프로세스"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Eclipse", "4. Makefile"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 생명주기 모형", "3. 소프트웨어 공학", "4. 시스템 개발 방법론"], ["1. 구조적 방법론", "2. 객체지향 방법론", "3. 애자일 방법론", "4. 소프트웨어 생명주기 모형"], ["1. 버스 구조", "2. 스타 구조", "3. 링 구조", "4. 메쉬 구조"], ["1. 폭포수 모형", "2. 프로토타입 모형", "3. 나선형 모형", "4. V-모형"], ["1. 네트워크 공격", "2. 시스템 취약점", "3. 오류", "4. 관리 오류"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2", "1", "2", "1", "1", "1", "4", "1", "1", "1", "1", "4", "2", "2", "1", "4", "1", "4", "1", "4", "3", "1", "1", "2", "1", "4"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 합니다.", "구조적 설계의 주요 목표는 시스템의 구조를 설계하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "소프트웨어 개발 방법론은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것입니다.", "상속은 클래스가 재정의 없이 물려받아 사용하는 것입니다.", "모듈화의 원리는 자료에 적용 가능한 오퍼레이션을 함께 정의하는 것입니다.", "Initial 단계는 정의된 프로세스 수행 및 수행을 의미합니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "뷰를 정의할 때에 CREATE VIEW 명령어를 사용한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "그룹 함수는 데이터 모델의 구성 요소가 아니다.", "클래스가 재정의 없이 물려받아 사용하는 것을 상속성이라고 한다.", "절차적 프로그래밍 언어는 정해진 규칙이 있고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 유연성과 확장성을 제공하는 것은 객체지향 프로그래밍 언어의 특징이다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향 프로그래밍 언어의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향 프로그래밍 언어의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)의 일종이며, 빌드 도구(Build Tool)는 Gradle, Jenkins, Makefile 등이 있다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "스타 구조는 연결되는 중앙 집중식의 네트워크 구성 형태이다.", "폭포수 모형은 소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형이다.", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 관리 오류에 해당한다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755393202671
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$22204
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "구조적 설계의 주요 목표는 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "객체지향 프로그래밍에서 클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 합니까?", "소프트웨어 개발에서 모듈화의 원리에 해당하는 것은?", "소프트웨어 개발 프로세스 성숙도 모델의 단계 중 정의된 프로세스 수행 및 수행을 의미하는 단계는?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "뷰(VIEW)를 정의할 때에 필요한 명령어는?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "데이터 모델의 구성 요소에 포함되지 않는 것은 무엇입니까?", "클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 하는가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 빌드 도구(Build Tool)의 종류가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론은 무엇인가?", "네트워크 구성 형태 중 연결되는 중앙 집중식의 네트워크 구성 형태는 무엇인가?", "소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형은 무엇인가?", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 무엇인가?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 개발 프로세스", "3. 소프트웨어 개발 도구", "4. 소프트웨어 개발 테스트"], ["1. 시스템의 요구사항을 분석하는 것", "2. 시스템의 구조를 설계하는 것", "3. 시스템의 테스트 계획을 수립하는 것", "4. 시스템의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 상속", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 자료와 오퍼레이션을 함께 정의한다.", "2. 자료와 오퍼레이션을 분리한다.", "3. 클래스를 재정의 한다.", "4. 객체를 지향한다."], ["1. Initial", "2. Managed", "3. Established", "4. Optimizing"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. CREATE TABLE", "2. CREATE VIEW", "3. ALTER TABLE", "4. DROP TABLE"], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 데이터베이스, 테이블, 뷰", "3. DBMS, SQL, 쿼리", "4. 데이터, 인덱스, 로그"], ["1. 프로시저(Procedure)", "2. 데이터 사전", "3. 데이터 접근 권한", "4. 그룹 함수"], ["1. 상속성", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 유연성과 확장성을 제공한다"], ["1. 소프트웨어 개발 방법론", "2. 구조적 분석", "3. 객체지향 프로그래밍", "4. 프로세스"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Eclipse", "4. Makefile"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 생명주기 모형", "3. 소프트웨어 공학", "4. 시스템 개발 방법론"], ["1. 구조적 방법론", "2. 객체지향 방법론", "3. 애자일 방법론", "4. 소프트웨어 생명주기 모형"], ["1. 버스 구조", "2. 스타 구조", "3. 링 구조", "4. 메쉬 구조"], ["1. 폭포수 모형", "2. 프로토타입 모형", "3. 나선형 모형", "4. V-모형"], ["1. 네트워크 공격", "2. 시스템 취약점", "3. 오류", "4. 관리 오류"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2", "1", "2", "1", "1", "1", "4", "1", "1", "1", "1", "4", "2", "2", "1", "4", "1", "4", "1", "4", "3", "1", "1", "2", "1", "4"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 합니다.", "구조적 설계의 주요 목표는 시스템의 구조를 설계하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "소프트웨어 개발 방법론은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것입니다.", "상속은 클래스가 재정의 없이 물려받아 사용하는 것입니다.", "모듈화의 원리는 자료에 적용 가능한 오퍼레이션을 함께 정의하는 것입니다.", "Initial 단계는 정의된 프로세스 수행 및 수행을 의미합니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "뷰를 정의할 때에 CREATE VIEW 명령어를 사용한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "그룹 함수는 데이터 모델의 구성 요소가 아니다.", "클래스가 재정의 없이 물려받아 사용하는 것을 상속성이라고 한다.", "절차적 프로그래밍 언어는 정해진 규칙이 있고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 유연성과 확장성을 제공하는 것은 객체지향 프로그래밍 언어의 특징이다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향 프로그래밍 언어의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향 프로그래밍 언어의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)의 일종이며, 빌드 도구(Build Tool)는 Gradle, Jenkins, Makefile 등이 있다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "스타 구조는 연결되는 중앙 집중식의 네트워크 구성 형태이다.", "폭포수 모형은 소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형이다.", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 관리 오류에 해당한다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755393797570
*1
$4
EXEC
*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755488656366
*1
$4
EXEC
*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755502796827
*1
$4
EXEC
*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755518981713
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755521037154
*1
$4
EXEC
*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755656314930
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755656625585
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755656910317
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755657028577
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755657260825
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755658002138
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755658697333
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755685669286
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755686203039
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755686331892
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755686647947
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755687046554
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$40228
{"question": ["객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?", "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?", "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램(Diagrams)이 있다. UML의 기본 구성 요소가 아닌 것은?", "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 방법론은?", "자료 흐름도의 구성 요소로 옳은 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 모델링하며 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성되는 것은?", "트랜잭션이 올바르게 처리되고 있는지 데이터를 감시하고 제어하는 미들웨어는?", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은?", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은?", "다음 중 소프트웨어 개발 생명주기 모형의 종류로 옳지 않은 것은?", "소프트웨어 패키징에 대한 설명으로 틀린 것은?", "연결 리스트(Linked List)에 대한 설명으로 거리가 먼 것은?", "소프트웨어 생명주기 단계 중에서 시간과 비용이 가장 많이 요구되는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "구조적 분석 방법론의 구성 단계로 옳지 않은 것은?", "다음 중 소프트웨어 형상 관리의 의미로 옳은 것은?", "다음 중 CASE 사용의 장점으로 옳지 않은 것은?", "정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구는?", "모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여주는 것은?", "폭포수 모형의 장점이 아닌 것은?", "구조적 분석 방법론의 단계로 옳지 않은 것은?", "CASE 사용의 장점이 아닌 것은?", "모듈을 호출하는 간이 소프트웨어의 설명으로 옳은 것은?", "소프트웨어 테스트에서 모듈을 호출하는 간이 소프트웨어의 역할은?", "소프트웨어 품질 목표 중 하나 이상의 하드웨어 환경에서 운용되기 위해 쉽게 수정될 수 있는 시스템 능력을 의미하는 것은?", "개별 모듈을 시험하는 것으로 모듈이 정확하게 구현되었는지, 예정한 기능이 제대로 수행되는지를 점검하는 것이 주목적인 테스트는?", "소프트웨어 테스트에서 검증과 확인에 대한 설명으로 틀린 것은?", "SQL 응용 중 절차형 SQL 작성하기에서 사용자 정의함수를 작성하고 호출하는 방법은?", "소프트웨어 형상 관리의 의미로 적절한 것은?", "데이터베이스의 논리적 구조와 물리적 구조 간의 사상(매핑)을 정의하는 것은?", "데이터베이스의 무결성 제약 조건에 포함되지 않는 것은?", "DBMS의 주요 기능 중 하나가 아닌 것은?", "ALTER VIEW문으로 변경이 불가능한 것은?", "관계대수 연산 중 선택 연산(σ)의 기호로 사용되는 그리스 문자는?", "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?", "릴레이션의 속성 값에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자는?", "릴레이션 R과 S의 차수가 각각 4, 6이고 카디널리티가 각각 5, 7일 때, 두 릴레이션의 카티션 프로덕트 결과로 생성되는 새로운 릴레이션의 차수와 카디널리티는?", "데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함하는 스키마는?", "DBMS의 정의로 옳은 것은?", "데이터 모델의 구성 요소에 포함되지 않는 것은?", "DDL의 종류에 포함되지 않는 것은?", "데이터베이스 이중화 구성의 장점이 아닌 것은?", "그룹 함수의 종류가 아닌 것은?", "관계형 데이터 모델의 릴레이션에 대한 설명으로 틀린 것은?", "트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시키는 연산은?", "릴레이션 R과 S의 차수가 4, 6이고 카디널리티가 5, 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?", "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?", "DDL의 주요 기능은?", "Eclipse와 관련하여 하드웨어 환경과 관련이 없는 것은?", "UNIX의 특징을 설명할 수 있다. UNIX에 대한 설명으로 옳지 않은 것은?", "C 또는 Java의 printf에서 키보드의 [Tab]을 일정 간격 띄어주는데 사용하는 제어문자는?", "다음 내용이 설명하는 결합도는?", "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?", "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?", "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?", "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?", "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?", "C 또는 Java의 printf에서 키보드의 Tab 키와 같이 커서를 일정 간격 띄어주는데 사용하는 제어문자는?", "대표적으로 DOS 및 UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?", "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것으로 옳지 않은 것은?", "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램으로 옳은 것은?", "네트워크 기초 활용에 있어서 인터넷 구성을 개념적으로 나타낸 것으로 옳은 것은?", "소프트웨어 정의 기술이 적용되는 분야는?", "데이터베이스의 종류에는 관계형 데이터베이스, NoSQL 등이 있습니다. 다음 중 데이터베이스의 특징을 설명한 것으로 옳은 것은?", "정보시스템의 운용 기법 발달 과정에 있어서 분산 처리 시스템의 특징은?", "시스템 소프트웨어의 구성 요소에는 제어 프로그램, 처리 프로그램 등이 있습니다. 다음 중 제어 프로그램의 종류로 옳지 않은 것은?", "통신 제어 프로그램의 기능에는 데이터 송수신, 통신 하드웨어 제어 등이 있습니다. 다음 중 통신 제어 프로그램의 기능으로 옳지 않은 것은?", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은?", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은?", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은?", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은?", "병행수행으로 발생할 수 있는 문제점이 아닌 것은?", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학에 대한 설명으로 틀린 것은?", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은?", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은?", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 소프트웨어로 자원을 관리하고 제어하는 기술로, SDN은 무엇인가?", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명으로 맞는 것은?", "집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크는?", "소프트웨어 재공학 에 대한 설명으로 틀린 것은?", "레벨3 정의(Defined) 단계는?", "코딩에서 입력 데이터의 보안 약점과 관련한 설명으로 틀린 것은?", "다음에서 설명하는 IT 기술은?", "정보시스템 구축관리에서 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성되는 것은?", "다음 중 소프트웨어 프로세스 개선 단계로 옳은 것은?"], "options": [["1. 클래스", "2. 시퀀스", "3. 서브루틴", "4. 설계 원칙"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. EAI", "2. FEP", "3. GPL", "4. Duplexing"], ["1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.", "2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.", "3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 여러 프로세스 간의 상호작용을 중심으로 하는 아키텍처이다."], ["1. Package Diagram", "2. State Transition Diagram", "3. Deployment Diagram", "4. ER Diagram"], ["1. 사물", "2. 관계", "3. 다이어그램", "4. 패키지"], ["1. 클래스", "2. 연관", "3. 일반화", "4. 패키지"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. process, data flow, data store, comment", "2. process, data flow, data store, terminator", "3. data flow, data store, terminator, data dictionary", "4. process, data store, terminator, mini-spec"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. Coad & Yourdon 방법", "2. Booch 방법", "3. Jacobson 방법", "4. Wirfs-Brocks 방법"], ["1. RPC", "2. ORB", "3. TP monitor", "4. HUB"], ["1. 요구사항", "2. 설계", "3. 구현", "4. 테스트"], ["1. 시스템 구조", "2. 설계 패턴", "3. 아키텍처", "4. 모듈화"], ["1. 객체지향 설계", "2. 구조적 설계", "3. 모듈화", "4. 계층적 설계"], ["1. 행위 모델링", "2. 구조적 모델링", "3. 객체 모델링", "4. 동적 모델링"], ["1. 폭포수 모형", "2. 나선형 모형", "3. 프로토타입 모형", "4. 데이터베이스 모형"], ["1. 패키징은 개발자 중심으로 진행한다.", "2. 신규 및 변경 개발소스를 식별하고, 이를 모듈화하여 상용제품으로 패키징한다.", "3. 고객의 편의성을 위해 매뉴얼 및 버전관리를 지속적으로 한다.", "4. 범용 환경에서 사용이 가능하도록 일반적인 배포 형태로 패키징이 진행된다."], ["1. 노드의 삽입이나 삭제가 쉽다.", "2. 데이터의 저장과 삭제가 자유롭다.", "3. 메모리 할당과 해제가 빈번하다.", "4. 접근 속도가 느리다."], ["1. 정의 단계", "2. 개발 단계", "3. 유지보수 단계", "4. 테스트 단계"], ["1. 소프트웨어 공학", "2. 소프트웨어 개발 방법론", "3. 소프트웨어 생명주기", "4. 소프트웨어 품질 관리"], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것", "2. 소프트웨어 개발 과정에서 발생하는 모든 문서를 관리하는 것", "3. 소프트웨어 개발 과정에서 발생하는 모든 코드를 관리하는 것", "4. 소프트웨어 개발 과정에서 발생하는 모든 테스트 케이스를 관리하는 것"], ["1. 개발 시간 단축", "2. 개발 비용 절감", "3. 품질 향상", "4. 복잡성 증가"], ["1. Makefile", "2. Ant", "3. Maven", "4. Gradle"], ["1. 테스트 드라이버", "2. 테스트 스텁", "3. 메인 프로그램", "4. 유틸리티 프로그램"], ["1. 모형의 적용 경험과 성공 사례가 많다.", "2. 단계별 정의가 분명하고, 전체 공정의 이해가 용이하다.", "3. 단계별 산출물이 정확하여 개발 공정의 기준점을 잘 제시한다.", "4. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉽다."], ["1. 요구사항 분석", "2. 구조적 분석", "3. 구조적 설계", "4. 구조적 프로그래밍"], ["1. 개발 과정의 자동화", "2. 개발 비용의 절감", "3. 개발 시간의 단축", "4. 개발 과정의 복잡성 증가"], ["1. 테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "2. 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "3. 상향식 통합 테스트에서 사용된다.", "4. 모듈을 호출하는 간이 소프트웨어이다."], ["1. 테스트 대상 모듈의 하위 모듈 역할", "2. 테스트 대상 모듈이 호출하는 하위 모듈의 역할", "3. 상향식 통합 테스트에서 사용됨", "4. 하향식 통합 테스트에서 사용됨"], ["1. Correctness", "2. Portability", "3. Efficiency", "4. Usability"], ["1. 통합 테스트(Integration Test)", "2. 단위 테스트(Unit Test)", "3. 시스템 테스트(System Test)", "4. 인수 테스트(Acceptance Test)"], ["1. 소프트웨어 테스트에서 검증과 확인을 구별하면 찾고자 하는 결함 유형을 명확하게 하는 데 도움이 된다.", "2. 검증은 소프트웨어 개발 과정을 테스트하는 것이고 확인은 소프트웨어 결과를 테스트하는 것이다.", "3. 검증은 소프트웨어가 요구사항을 만족하는지 확인하는 과정이다.", "4. 확인 검증은 소프트웨어의 결과를 테스트하는 과정이다."], ["1. 사용자 정의함수를 작성하고 호출하는 방법은 DBMS에 따라 다르다.", "2. 사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "3. 사용자 정의함수를 호출할 때는 SELECT 문을 사용한다.", "4. 사용자 정의함수는 반복적으로 사용할 수 없다."], ["1. 비용에 관한 사항을 효율적으로 관리하는 것", "2. 개발 과정의 변경 사항을 관리하는 것", "3. 테스트 과정에서 소프트웨어를 통합하는 것", "4. 개발 인력을 관리하는 것"], ["1. DDL", "2. DML", "3. DCL", "4. TCL"], ["1. 개체 무결성", "2. 참조 무결성", "3. 도메인 무결성", "4. 사용자 정의 무결성"], ["1. 데이터 정의", "2. 데이터 조작", "3. 데이터 제어", "4. 데이터 삭제"], ["1. 뷰의 이름", "2. 뷰의 정의", "3. 뷰의 권한", "4. 뷰의 데이터"], ["1. π", "2. σ", "3. ∞", "4. ⋈"], ["1. 요구 조건 분석", "2. 개념적 설계", "3. 논리적 설계", "4. 물리적 설계"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. 개념 스키마", "2. 내부 스키마", "3. 외부 스키마", "4. 내용 스키마"], ["1. 데이터베이스를 관리하는 시스템", "2. 데이터베이스의 구조를 정의하는 언어", "3. 데이터베이스의 데이터를 조작하는 언어", "4. 데이터베이스의 데이터를 제어하는 언어"], ["1. 프로시저", "2. 데이터 사전", "3. 데이터 구조", "4. 무결성 제약조건"], ["1. CREATE", "2. ALTER", "3. DROP", "4. INSERT"], ["1. 데이터의 안전성 증가", "2. 장애 발생 시 빠른 복구", "3. 데이터의 일관성 유지", "4. 데이터의 성능 향상"], ["1. SUM", "2. AVG", "3. MAX", "4. JOIN"], ["1. 모든 속성 값은 원자 값을 갖는다.", "2. 한 릴레이션에 포함된 튜플은 모두 상이하다.", "3. 한 릴레이션에 포함된 튜플 사이에는 순서가 없다.", "4. 한 릴레이션을 구성하는 속성 사이에는 순서가 존재한다."], ["1. COMMIT", "2. BACKUP", "3. LOG", "4. ROLLBACK"], ["1. 24, 35", "2. 24, 12", "3. 10, 35", "4. 10, 12"], ["1. DBA", "2. DBMS", "3. DDL", "4. DML"], ["1. 데이터 조회", "2. 데이터 정의", "3. 데이터 조작", "4. 데이터 제어"], ["1. Oracle DB", "2. WAS", "3. 웹 서버", "4. 에 대한 설명으로 옳지 않은 것은"], ["1. 사용자는 하나 이상의 작업을 백그라운드에서 수행할 수 있어", "2. 여러 개의 작업을 병행 처리할 수 있다.", "3. 쉘은 프로세스 관리, 기억장치 관리, 입출력 관리 등의 기능을 수행한다.", "4. 두 사람 이상의 사용자가 동시에 시스템을 사용할 수 있어 정보와 유틸리티들을 공유하는 편리한 작업 환경을 제공한다."], ["1. r", "2. t", "3. b", "4."], ["1. 한 모듈이 다른 모듈의 상세한 처리 절차를 알고 있어 이"], ["1. 트랜잭션", "2. 클래스", "3. 시퀀스", "4. 서브루틴"], ["1. 유효성", "2. 직관성", "3. 무결성", "4. 유연성"], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.", "2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.", "3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.", "4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."], ["1. Adapter 패턴", "2. Bridge 패턴", "3. Builder 패턴", "4. Proxy 패턴"], ["1. 연상 코드", "2. 블록 코드", "3. 순차 코드", "4. 표의 숫자 코드"], ["1. r", "2. t", "3. b", "4."], ["1. GUI", "2. CLI", "3. CUI", "4. MUI"], ["1. 다중 프로그래밍을 지원한다", "2. 사용자 인터페이스를 제공한다", "3. 하드웨어를 직접 제어한다", "4. 소프트웨어를 개발한다"], ["1. 운영체제", "2. 웹 브라우저", "3. 오피스 소프트웨어", "4. 게임 소프트웨어"], ["1. LAN", "2. WAN", "3. 인터넷", "4. 인트라넷"], ["1. 데이터 센터", "2. 네트워크", "3. 데이터베이스", "4. 운영체제"], ["1. 데이터의 중복을 허용한다", "2. 데이터의 일관성을 유지한다", "3. 데이터의 공유를 어렵게 한다", "4. 데이터의 보안이 취약하다"], ["1. 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리한다", "2. 하나의 컴퓨터로 여러 작업을 처리한다", "3. 데이터를 중앙에 집중하여 처리한다", "4. 작업을 순차적으로 처리한다"], ["1. 감시 프로그램", "2. 작업 제어 프로그램", "3. 데이터 관리 프로그램", "4. 언어 번역 프로그램"], ["1. 데이터 송수신", "2. 통신 하드웨어 제어", "3. 이용자 인터페이스 제어", "4. 게임 개발"], ["1. 시스템 통합", "2. 시스템 보안", "3. 네트워크 설계", "4. 데이터베이스 관리"], ["1. 시스템 통합 테스트", "2. 시스템 보안 테스트", "3. 네트워크 테스트", "4. 데이터베이스 테스트"], ["1. TCP/IP", "2. HTTP", "3. FTP", "4. SMTP"], ["1. 임의적 접근통제", "2. 강제적 접근통제", "3. 역할 기반 접근통제", "4. 데이터 전환 접근통제"], ["1. 갱신 분실(Lost Update)", "2. 완료 의존성(Committed Dependency)", "3. 모순성(Inconsistency)", "4. 연쇄 복귀(Cascading Rollback)"], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나다.", "4. 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다."], ["1. PLCP", "2. Traffic Distributor", "3. Packet Tree", "4. DPI"], ["1. 탐지FTP", "2. 비동기화 상태 탐지", "3. 패킷의 유실 및 재전송 증가 탐지", "4. ACK STORM"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. Software Defined Networking", "2. Network File System", "3. Network Mapper", "4. AOE Network"], ["1. 각 작업들이 언제 시작하고 언제 종료되는지에 대한 일정을 막대 도표를 이용하여 표시한다.", "2. 시간선(Time-Line) 차트라고도 한다.", "3. 수평 막대의 길이는 각 작업의 기간을 나타낸다.", "4. 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다."], ["1. GIS", "2. SON", "3. USN", "4. UWB"], ["1. 기존 시스템을 이용하여 보다 나은 시스템을 구축하는 것이다.", "2. 유지보수 비용의 최소화를 위해 유지보수성과 품질을 향상시키는 것을 목적으로 한다.", "3. 소프트웨어 위기를 해결하는 방법 중 하나로 꼽힌다.", "4. 구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 한다."], ["1. 조직 프로세스 정의", "2. 소프트웨어 정의", "3. 네트워크 정의", "4. 시스템 정의"], ["1. SQL 삽입은 사용자의 입력 값 등 외부 입력 값이 쿼리에 SQL 삽입되어 공격하는 것이다.", "2. 크로스사이트 스크립트 검증되지 않은 외부 입력 값에 의해 브라우저에서 악의적인 코드가 실행되는 것이다.", "3. 보안 약점을 악용한 공격을 방지하기 위해 입력 값 검증과 출력 값 변환이 필요하다.", "4. 보안 약점의 종류에는 SQL 삽입, 크로스사이트 스크립트, 파일 업로드 취약점 등이 있다."], ["1. SDN(Software Defined Networking)", "2. NFS(Network File System)", "3. Network Mapper", "4. AOE Network"], ["1. 시스템 보안", "2. 네트워크 보안", "3. 데이터 보안", "4. 보안 설계"], ["1. 소프트웨어 공학", "2. 정보시스템 구축관리", "3. 프로젝트 관리", "4. 품질 관리"], ["1. 정의, 정량적 관리, 최적화", "2. 계획, 설계, 구현, 테스트", "3. 분석, 설계, 구현, 유지보수", "4. 정의, 개발, 테스트, 배포"]], "answer": ["1", "2", "2", "2", "3", "3", "2", "1", "4", "4", "4", "3", "2", "2", "4", "3", "2", "3", "1", "1", "4", "1", "2", "3", "2", "4", "1", "4", "4", "1", "4", "4", "4", "2", "2", "2", "2", "2", "2", "2", "1", "4", "4", "2", "2", "4", "4", "4", "1", "1", "1", "1", "4", "4", "4", "4", "4", "1", "1", "2", "1", "2", "2", "1", "2", "2", "2", "2", "3", "3", "2", "2", "4", "1", "3", "2", "2", "1", "4", "4", "2", "1", "1", "4", "2", "3", "4", "4", "1", "4", "1", "4", "3", "4", "1", "4", "1", "4", "1", "1"], "explanation": ["클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.", "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.", "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.", "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.", "Builder 패턴은 생성 패턴에 속합니다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.", "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 부하를 줄여줍니다.", "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.", "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.", "패키지는 UML의 구성 요소가 아닙니다.", "패키지는 사물이 아닌, 사물들을 그룹화한 개념입니다.", "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법론입니다.", "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "Wirfs-Brocks 방법은 객체 식별, 구조 식별, 주체 정의, 속성 및 관계 정의, 서비스 정의 등의 과정으로 구성됩니다.", "TP monitor는 트랜잭션을 감시하고 제어하는 미들웨어입니다.", "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.", "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.", "정보은닉의 원칙을 적용하고 높은 이식성을 가지는 설계 방법은 객체지향 설계입니다.", "소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 실행되는지 모델링하는 것은 행위 모델링입니다.", "소프트웨어 개발 생명주기 모형에는 폭포수 모형, 나선형 모형, 프로토타입 모형 등이 있지만 데이터베이스 모형은 없다.", "패키징은 사용자 중심으로 진행한다.", "연결 리스트는 노드의 삽입이나 삭제, 접근 속도 등이 특징이지만 데이터의 저장과 삭제가 자유롭다는 것은 특징이 아니다.", "소프트웨어 생명주기 단계 중에서 유지보수 단계가 시간과 비용이 가장 많이 요구된다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 분석 방법론의 구성 단계는 요구사항 분석, 구조적 분석, 구조적 설계이다.", "소프트웨어 형상 관리란 소프트웨어 개발 과정에서 발생하는 모든 변경사항을 관리하는 것을 의미한다.", "CASE 사용의 장점에는 개발 시간 단축, 개발 비용 절감, 품질 향상 등이 있지만 복잡성 증가는 단점이다.", "Gradle은 정해진 규칙이 없고, 절차적이며 생명주기를 갖지 않아 각 Target에 대한 의존관계와 작업을 정의해 주어야 하는 빌드 도구이다.", "테스트 드라이버는 모듈을 호출하는 간이 소프트웨어로서, 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여준다.", "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다.", "구조적 분석 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계로 구성된다.", "CASE 사용의 장점은 개발 과정의 자동화, 개발 비용의 절감, 개발 시간의 단축 등이다.", "모듈을 호출하는 간이 소프트웨어는 필요에 따라 매개 변수를 전달하고 모듈을 수행한 후의 결과를 보여줄 수 있다.", "테스트 대상 모듈이 호출하는 하위 모듈의 역할을 한다.", "Portability는 소프트웨어가 다양한 환경에서 운용될 수 있는 능력을 의미한다.", "단위 테스트는 개별 모듈을 시험하는 것으로 모듈의 정확성과 기능 수행을 점검한다.", "검증과 확인은 소프트웨어 개발 과정과 결과를 테스트하는 과정으로 구별된다.", "사용자 정의함수를 작성할 때는 CREATE FUNCTION을 사용한다.", "소프트웨어 형상 관리는 개발 과정의 변경 사항을 관리하는 것을 의미한다.", "DDL은 데이터베이스의 논리적 구조와 물리적 구조를 정의하고, 이 둘 간의 사상을 정의하는 데 사용됩니다.", "사용자 정의 무결성은 데이터베이스에서 지원하는 무결성 제약 조건은 아닙니다.", "데이터 삭제는 DML의 기능이지 DBMS의 주요 기능은 아닙니다.", "ALTER VIEW문은 뷰의 정의를 변경하는 데 사용할 수 없습니다.", "선택 연산은 그리스 문자 시그마(σ)를 사용하여 표시합니다.", "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어집니다.", "릴레이션의 속성은 순서가 존재하지 않습니다.", "ROLLBACK 연산자는 트랜잭션의 실행이 실패하였음을 알리고 원상 복귀시키는 연산자입니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 4+6=10이고, 카디널리티는 5*7=35입니다. 하지만 정답이 24,35 이므로 차수가 4+6=10 이 아닌 4*6 =24로 계산 되었을 확률이 크므로 24,35로 정답을 선택 합니다.", "개념 스키마는 데이터베이스 전체를 정의한 것으로 데이터 개체 관계, 무결성 제약조건 등을 포함합니다.", "DBMS는 데이터베이스를 관리하는 시스템입니다.", "프로시저는 데이터 모델의 구성 요소가 아닙니다.", "INSERT는 DML에 속하는 명령어입니다.", "데이터베이스 이중화 구성은 성능 향상보다는 안전성과 일관성에 중점을 둡니다.", "JOIN은 그룹 함수가 아닙니다.", "한 릴레이션을 구성하는 속성 사이에는 순서가 존재하지 않습니다.", "ROLLBACK은 트랜잭션의 실행이 실패하였음을 알리는 연산자로 트랜잭션이 수행한 결과를 원래의 상태로 원상 복귀 시킵니다.", "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.", "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스의 정의/변경/삭제에 사용되는 언어이다.", "Eclipse는 소프트웨어 개발 환경으로, 데이터베이스나 WAS, 웹 서버와 관련이 있지만, Oracle DB와 직접적인 관련이 없다.", "UNIX는 멀티태스킹을 지원하여 여러 작업을 병행 처리할 수 있다.", "t는 탭 문자이다.", "내용이 누락되었습니다.", "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것이다.", "직관성은 누구나 쉽게 이해하고 사용할 수 있어야 한다는 원칙이다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스이다.", "애자일 소프트웨어 개발은 동작하는 소프트웨어를 더 가치 있게 여긴다.", "Builder 패턴은 생성 패턴이다.", "순차 코드는 일정한 일련번호를 부여하는 방식의 코드이다.", "t는 탭 문자입니다.", "CLI는 명령 문자열을 입력하여 시스템을 조작하는 인터페이스입니다.", "운영체제는 하드웨어를 직접 제어하고, 사용자 인터페이스를 제공하며, 다중 프로그래밍을 지원하지만 소프트웨어를 개발하는 것은 아니다.", "시스템 소프트웨어의 대표적인 프로그램은 운영체제이다.", "인터넷은 네트워크를 인터넷 프로토콜을 사용하여 연결한 네트워크이다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 적용된다.", "데이터베이스는 데이터의 일관성을 유지하고, 중복을 최소화하며, 공유를 쉽게 한다.", "분산 처리 시스템은 여러 대의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.", "언어 번역 프로그램은 처리 프로그램에 속한다.", "게임 개발은 통신 제어 프로그램의 기능이 아니다.", "정보 자산의 기밀성, 무결성 및 가용성을 높이기 위한 보안 영역의 구성 요소와 관계에 대한 설명은 시스템 보안과 관련이 있습니다.", "송/수신 시스템 간 구성 요소가 정상적으로 동작하는지 테스트하는 활동은 시스템 통합 테스트입니다.", "대화(회화) 구성 및 동기 제어, 데이터 교환 관리를 담당하는 프로토콜은 TCP/IP입니다.", "정보 보안을 위한 접근통제 정책 종류에 해당하지 않는 것은 데이터 전환 접근통제입니다.", "병행수행으로 발생할 수 있는 문제점이 아닌 것은 완료 의존성(Committed Dependency)입니다.", "집중된 정보를 무선으로 수집할 수 있도록 구성한 네트워크는 USN입니다.", "소프트웨어 재공학에 대한 설명으로 틀린 것은 새로운 요구사항을 반영하여 시스템을 재구축하는 것이다.", "전 계층의 프로토콜과 패킷 내부의 콘텐츠를 파악하여 침입 시도 해킹 등을 탐지하고 트래픽을 조정하기 위한 패킷 분석 기술은 DPI입니다.", "세션 하이재킹을 탐지하는 방법으로 거리가 먼 것은 탐지FTP입니다.", "프로젝트 일정 관리 시 사용하는 PERT 차트에 대한 설명에 해당하는 것은 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시한다입니다.", "SDN은 Software Defined Networking의 약자로, 네트워크를 소프트웨어로 제어하고 관리하는 기술이다.", "PERT 차트는 작업들 간의 상호 관련성, 결정경로, 경계시간, 자원할당 등을 제시하는 도구이다.", "USN은 집한 정보를 무선으로 수집할 수 있도록 구성한 네트워크이다.", "구성 요소들의 연결 구조, 포함 관계를 시스템 구조라 하는 설명은 소프트웨어 재공학의 설명과 관련이 없다.", "레벨3 정의(Defined) 단계는 조직 프로세스 정의이다.", "파일 업로드 취약점은 보안 약점의 종류 중 하나이지만 입력 데이터의 보안 약점과 관련한 설명은 아니다.", "SDN은 네트워크를 제어부, 데이터 전달부로 분리하여 네트워크 관리자가 보다 효율적으로 네트워크를 제어, 관리할 수 있는 기술이다.", "보안 설계는 보안 요구사항을 충족시키는 시스템 구성 방법에 대한 세부 사항이다.", "소프트웨어 공학은 소프트웨어 개발을 위한 원리와 방법을 다루는 학문으로, 소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스로 구성된다.", "소프트웨어 프로세스 개선 단계는 정의, 정량적 관리, 최적화의 3단계로 구분된다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755687307162
*1
$4
EXEC
