*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755332489182
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755332980688
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$173
{"question": [], "options": [], "answer": [], "explanation": [], "subject": [], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755333080565
*1
$4
EXEC
*1
$5
MULTI
*2
$6
SELECT
$1
0
*3
$3
SET
$30
demo_user:teacher:local:shared
$3426
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"]], "answer": ["1", "1", "1", "1", "1", "1"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755391351587
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$13072
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755391894238
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$22204
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "구조적 설계의 주요 목표는 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "객체지향 프로그래밍에서 클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 합니까?", "소프트웨어 개발에서 모듈화의 원리에 해당하는 것은?", "소프트웨어 개발 프로세스 성숙도 모델의 단계 중 정의된 프로세스 수행 및 수행을 의미하는 단계는?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "뷰(VIEW)를 정의할 때에 필요한 명령어는?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "데이터 모델의 구성 요소에 포함되지 않는 것은 무엇입니까?", "클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 하는가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 빌드 도구(Build Tool)의 종류가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론은 무엇인가?", "네트워크 구성 형태 중 연결되는 중앙 집중식의 네트워크 구성 형태는 무엇인가?", "소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형은 무엇인가?", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 무엇인가?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 개발 프로세스", "3. 소프트웨어 개발 도구", "4. 소프트웨어 개발 테스트"], ["1. 시스템의 요구사항을 분석하는 것", "2. 시스템의 구조를 설계하는 것", "3. 시스템의 테스트 계획을 수립하는 것", "4. 시스템의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 상속", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 자료와 오퍼레이션을 함께 정의한다.", "2. 자료와 오퍼레이션을 분리한다.", "3. 클래스를 재정의 한다.", "4. 객체를 지향한다."], ["1. Initial", "2. Managed", "3. Established", "4. Optimizing"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. CREATE TABLE", "2. CREATE VIEW", "3. ALTER TABLE", "4. DROP TABLE"], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 데이터베이스, 테이블, 뷰", "3. DBMS, SQL, 쿼리", "4. 데이터, 인덱스, 로그"], ["1. 프로시저(Procedure)", "2. 데이터 사전", "3. 데이터 접근 권한", "4. 그룹 함수"], ["1. 상속성", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 유연성과 확장성을 제공한다"], ["1. 소프트웨어 개발 방법론", "2. 구조적 분석", "3. 객체지향 프로그래밍", "4. 프로세스"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Eclipse", "4. Makefile"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 생명주기 모형", "3. 소프트웨어 공학", "4. 시스템 개발 방법론"], ["1. 구조적 방법론", "2. 객체지향 방법론", "3. 애자일 방법론", "4. 소프트웨어 생명주기 모형"], ["1. 버스 구조", "2. 스타 구조", "3. 링 구조", "4. 메쉬 구조"], ["1. 폭포수 모형", "2. 프로토타입 모형", "3. 나선형 모형", "4. V-모형"], ["1. 네트워크 공격", "2. 시스템 취약점", "3. 오류", "4. 관리 오류"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2", "1", "2", "1", "1", "1", "4", "1", "1", "1", "1", "4", "2", "2", "1", "4", "1", "4", "1", "4", "3", "1", "1", "2", "1", "4"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 합니다.", "구조적 설계의 주요 목표는 시스템의 구조를 설계하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "소프트웨어 개발 방법론은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것입니다.", "상속은 클래스가 재정의 없이 물려받아 사용하는 것입니다.", "모듈화의 원리는 자료에 적용 가능한 오퍼레이션을 함께 정의하는 것입니다.", "Initial 단계는 정의된 프로세스 수행 및 수행을 의미합니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "뷰를 정의할 때에 CREATE VIEW 명령어를 사용한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "그룹 함수는 데이터 모델의 구성 요소가 아니다.", "클래스가 재정의 없이 물려받아 사용하는 것을 상속성이라고 한다.", "절차적 프로그래밍 언어는 정해진 규칙이 있고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 유연성과 확장성을 제공하는 것은 객체지향 프로그래밍 언어의 특징이다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향 프로그래밍 언어의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향 프로그래밍 언어의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)의 일종이며, 빌드 도구(Build Tool)는 Gradle, Jenkins, Makefile 등이 있다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "스타 구조는 연결되는 중앙 집중식의 네트워크 구성 형태이다.", "폭포수 모형은 소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형이다.", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 관리 오류에 해당한다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755392442202
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$22204
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "구조적 설계의 주요 목표는 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "객체지향 프로그래밍에서 클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 합니까?", "소프트웨어 개발에서 모듈화의 원리에 해당하는 것은?", "소프트웨어 개발 프로세스 성숙도 모델의 단계 중 정의된 프로세스 수행 및 수행을 의미하는 단계는?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "뷰(VIEW)를 정의할 때에 필요한 명령어는?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "데이터 모델의 구성 요소에 포함되지 않는 것은 무엇입니까?", "클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 하는가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 빌드 도구(Build Tool)의 종류가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론은 무엇인가?", "네트워크 구성 형태 중 연결되는 중앙 집중식의 네트워크 구성 형태는 무엇인가?", "소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형은 무엇인가?", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 무엇인가?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 개발 프로세스", "3. 소프트웨어 개발 도구", "4. 소프트웨어 개발 테스트"], ["1. 시스템의 요구사항을 분석하는 것", "2. 시스템의 구조를 설계하는 것", "3. 시스템의 테스트 계획을 수립하는 것", "4. 시스템의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 상속", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 자료와 오퍼레이션을 함께 정의한다.", "2. 자료와 오퍼레이션을 분리한다.", "3. 클래스를 재정의 한다.", "4. 객체를 지향한다."], ["1. Initial", "2. Managed", "3. Established", "4. Optimizing"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. CREATE TABLE", "2. CREATE VIEW", "3. ALTER TABLE", "4. DROP TABLE"], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 데이터베이스, 테이블, 뷰", "3. DBMS, SQL, 쿼리", "4. 데이터, 인덱스, 로그"], ["1. 프로시저(Procedure)", "2. 데이터 사전", "3. 데이터 접근 권한", "4. 그룹 함수"], ["1. 상속성", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 유연성과 확장성을 제공한다"], ["1. 소프트웨어 개발 방법론", "2. 구조적 분석", "3. 객체지향 프로그래밍", "4. 프로세스"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Eclipse", "4. Makefile"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 생명주기 모형", "3. 소프트웨어 공학", "4. 시스템 개발 방법론"], ["1. 구조적 방법론", "2. 객체지향 방법론", "3. 애자일 방법론", "4. 소프트웨어 생명주기 모형"], ["1. 버스 구조", "2. 스타 구조", "3. 링 구조", "4. 메쉬 구조"], ["1. 폭포수 모형", "2. 프로토타입 모형", "3. 나선형 모형", "4. V-모형"], ["1. 네트워크 공격", "2. 시스템 취약점", "3. 오류", "4. 관리 오류"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2", "1", "2", "1", "1", "1", "4", "1", "1", "1", "1", "4", "2", "2", "1", "4", "1", "4", "1", "4", "3", "1", "1", "2", "1", "4"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 합니다.", "구조적 설계의 주요 목표는 시스템의 구조를 설계하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "소프트웨어 개발 방법론은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것입니다.", "상속은 클래스가 재정의 없이 물려받아 사용하는 것입니다.", "모듈화의 원리는 자료에 적용 가능한 오퍼레이션을 함께 정의하는 것입니다.", "Initial 단계는 정의된 프로세스 수행 및 수행을 의미합니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "뷰를 정의할 때에 CREATE VIEW 명령어를 사용한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "그룹 함수는 데이터 모델의 구성 요소가 아니다.", "클래스가 재정의 없이 물려받아 사용하는 것을 상속성이라고 한다.", "절차적 프로그래밍 언어는 정해진 규칙이 있고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 유연성과 확장성을 제공하는 것은 객체지향 프로그래밍 언어의 특징이다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향 프로그래밍 언어의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향 프로그래밍 언어의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)의 일종이며, 빌드 도구(Build Tool)는 Gradle, Jenkins, Makefile 등이 있다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "스타 구조는 연결되는 중앙 집중식의 네트워크 구성 형태이다.", "폭포수 모형은 소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형이다.", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 관리 오류에 해당한다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755393202671
*1
$4
EXEC
*1
$5
MULTI
*3
$3
SET
$30
demo_user:teacher:local:shared
$22204
{"question": ["소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "행위 모델링의 목적은 무엇입니까?", "계층적 구성을 나타내는 모델의 장점으로 옳은 것은 무엇입니까?", "요구사항 검증 절차의 순서로 옳은 것은 무엇입니까?", "구조적 방법론의 단계로 옳은 것은 무엇입니까?", "객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것은?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "구조적 설계 방법론의 특징으로 옳지 않은 것은 무엇입니까?", "UML의 정적 관점이 나타내는 것은 무엇인가?", "소프트웨어의 구성 요소에 포함되지 않는 것은?", "소프트웨어 개발에서 사용되는 그래픽 표기법은?", "시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은?", "소프트웨어의 특징을 설명하는 것은?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "ALTER VIEW 문의 사용 목적은 무엇입니까?", "데이터 모델의 물리적 데이터 구조를 정의하는 데 사용되는 SQL 명령어는 무엇인가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향의 특징이 아닌 것은?", "다음 중 빌드 자동화 도구로 사용되는 것이 아닌 것은?", "다음 중 절차적 프로그래밍 언어의 특징으로 설명할 수 없는 것은?", "레벨 3 정의(Defined) 단계의 프로세스 특징은?", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는?", "소프트웨어 정의 기술이 사용되는 영역은?", "시스템의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것은?", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "구조적 설계의 주요 목표는 무엇입니까?", "모듈 간의 계층적 구성을 나타내는 모델은 무엇입니까?", "검증 절차의 첫 단계는 무엇입니까?", "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?", "소프트웨어 개발에서 사용되는 빌드 도구 중 하나가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 합니까?", "객체지향 프로그래밍에서 클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 합니까?", "소프트웨어 개발에서 모듈화의 원리에 해당하는 것은?", "소프트웨어 개발 프로세스 성숙도 모델의 단계 중 정의된 프로세스 수행 및 수행을 의미하는 단계는?", "데이터베이스 관리 시스템(DBMS)의 주요 기능은 무엇입니까?", "DDL(Data Definition Language)의 주요用途는 무엇입니까?", "뷰(VIEW)를 정의할 때에 필요한 명령어는?", "분산 데이터베이스 시스템의 주요 구성 요소는 무엇입니까?", "데이터 모델의 구성 요소에 포함되지 않는 것은 무엇입니까?", "클래스가 재정의 없이 물려받아 사용하는 것을 무엇이라고 하는가?", "다음 중 절차적 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "다음 중 객체지향 프로그래밍 언어의 특징이 아닌 것은?", "다음 중 빌드 도구(Build Tool)의 종류가 아닌 것은?", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라고 하는가?", "요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론은 무엇인가?", "네트워크 구성 형태 중 연결되는 중앙 집중식의 네트워크 구성 형태는 무엇인가?", "소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형은 무엇인가?", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 무엇인가?"], "options": [["1. 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것", "2. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것", "3. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된 방법론", "4. 시스템의 인터페이스와 관련된 요구사항을 정의하는 것"], ["1. 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것", "2. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타내는 것", "3. 시스템은 객체로 구성된다는 것을 정의하는 것", "4. 핵심 기능 + 데이터를 사용자에게 표시하는 것"], ["1. 정보은닉의 원칙 적용, 높은 이식성을 가진다.", "2. 추가적인 실행 시 오버헤드(너무 많은 계층으로 성능 감소 발생)가 발생한다.", "3. 계층적으로 조직화할 수 있는 서비스로 구성된 애플리케이션에 적합하지 않다.", "4. 복잡한 시스템을 단순화하여 표현할 수 없다."], ["1. 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정", "2. 검토 계획 수립 => 베이스라인 설정 => 검토, 오류 수정", "3. 베이스라인 설정 => 검토 계획 수립 => 검토, 오류 수정", "4. 검토, 오류 수정 => 검토 계획 수립 => 베이스라인 설정"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍 단계", "3. 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계", "4. 요구사항 분석, 구조적 분석, 구조적 프로그래밍 단계"], ["1. 클래스", "2. 객체", "3. 인터페이스", "4. 패키지"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "2. 정형화된 분석 절차에 따라 사용자 요구사항을 파악하여 문서화하는 체계적인 방법론이다.", "3. 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것이다.", "4. 소프트웨어 개발 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미한다."], ["1. 소프트웨어의 동적 행위", "2. 소프트웨어 내부의 구성 요소 사이의 구조적 관계", "3. 프레임워크의 동작 원리", "4. 사용자 인터페이스"], ["1. 객체", "2. 클래스", "3. 메시지", "4. 변수"], ["1. UML", "2. ERD", "3. DFD", "4. 구조적 프로그래밍"], ["1. 객체", "2. 메시지", "3. 시간축", "4. 클래스"], ["1. 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "2. 프로그램의 수행에 필요한 절차, 규칙, 관련 문서 등을 총칭한다.", "3. 시스템은 객체로 구성된다.", "4. 소프트웨어의 구성 요소인 모듈 간의 계층적 구성을 나타낸 것이다."], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 분산 처리기, 데이터베이스, 저장 장치", "3. 분산 데이터베이스, 통신 네트워크, 저장 장치", "4. 분산 처리기, 분산 데이터베이스"], ["1. 뷰의 정의를 변경한다.", "2. 뷰를 생성한다.", "3. 뷰를 삭제한다.", "4. 뷰를 조회한다."], ["1. SELECT", "2. INSERT", "3. UPDATE", "4. CREATE TABLE"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 객체지향적이다"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Eclipse"], ["1. 정해진 규칙이 있다", "2. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "3. 컴파일러를 사용한다", "4. 유연성이 있다"], ["1. 정의된 프로세스", "2. 정량적 관리", "3. 최적화", "4. 소프트웨어 공학 원칙에 기반한 프로세스"], ["1. 초기, 관리, 정의, 정량적 관리, 최적화", "2. 초기, 정의, 관리, 정량적 관리, 최적화", "3. 관리, 정의, 정량적 관리, 최적화, 계획", "4. 계획, 관리, 정의, 정량적 관리, 최적화"], ["1. 네트워크, 데이터 센터", "2. 데이터베이스, 보안", "3. 클라우드, 인공지능", "4. 운영체제, 데이터마이닝"], ["1. 구조 모델링", "2. 행위 모델링", "3. 기능 모델링", "4. 데이터 모델링"], ["1. 초기", "2. 정의", "3. 관리", "4. 레벨 3 정의"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 개발 프로세스", "3. 소프트웨어 개발 도구", "4. 소프트웨어 개발 테스트"], ["1. 시스템의 요구사항을 분석하는 것", "2. 시스템의 구조를 설계하는 것", "3. 시스템의 테스트 계획을 수립하는 것", "4. 시스템의 유지보수를 수행하는 것"], ["1. 계층 모델", "2. 네트워크 모델", "3. 관계 모델", "4. 객체 모델"], ["1. 검토 계획 수립", "2. 검토 및 오류 수정", "3. 베이스라인 설정", "4. 요구사항 승인"], ["1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것", "2. 소프트웨어의 요구사항을 분석하는 것", "3. 소프트웨어의 테스트 계획을 수립하는 것", "4. 소프트웨어의 유지보수를 수행하는 것"], ["1. Gradle", "2. Jenkins", "3. Makefile", "4. Python"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 테스트", "3. 소프트웨어 유지보수", "4. 소프트웨어 공학"], ["1. 상속", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 자료와 오퍼레이션을 함께 정의한다.", "2. 자료와 오퍼레이션을 분리한다.", "3. 클래스를 재정의 한다.", "4. 객체를 지향한다."], ["1. Initial", "2. Managed", "3. Established", "4. Optimizing"], ["1. 데이터베이스 구조를 정의한다.", "2. 데이터를 백업하고 회복한다.", "3. 데이터 접근 권한을 관리한다.", "4. 모든 것을 수행한다."], ["1. 데이터를 삽입하고 수정하는 것이다.", "2. 데이터베이스 구조를 정의하는 것이다.", "3. 데이터를 조회하는 것이다.", "4. 데이터를 삭제하는 것이다."], ["1. CREATE TABLE", "2. CREATE VIEW", "3. ALTER TABLE", "4. DROP TABLE"], ["1. 분산 처리기, 분산 데이터베이스, 통신 네트워크", "2. 데이터베이스, 테이블, 뷰", "3. DBMS, SQL, 쿼리", "4. 데이터, 인덱스, 로그"], ["1. 프로시저(Procedure)", "2. 데이터 사전", "3. 데이터 접근 권한", "4. 그룹 함수"], ["1. 상속성", "2. 다형성", "3. 캡슐화", "4. 추상화"], ["1. 정해진 규칙이 있다", "2. 절차적이다", "3. 규모가 커질수록 함수가 기하급수적으로 늘어난다", "4. 유연성과 확장성을 제공한다"], ["1. 소프트웨어 개발 방법론", "2. 구조적 분석", "3. 객체지향 프로그래밍", "4. 프로세스"], ["1. 캡슐화", "2. 상속성", "3. 다형성", "4. 절차적 프로그래밍"], ["1. Gradle", "2. Jenkins", "3. Eclipse", "4. Makefile"], ["1. 소프트웨어 개발 방법론", "2. 소프트웨어 생명주기 모형", "3. 소프트웨어 공학", "4. 시스템 개발 방법론"], ["1. 구조적 방법론", "2. 객체지향 방법론", "3. 애자일 방법론", "4. 소프트웨어 생명주기 모형"], ["1. 버스 구조", "2. 스타 구조", "3. 링 구조", "4. 메쉬 구조"], ["1. 폭포수 모형", "2. 프로토타입 모형", "3. 나선형 모형", "4. V-모형"], ["1. 네트워크 공격", "2. 시스템 취약점", "3. 오류", "4. 관리 오류"]], "answer": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "2", "4", "1", "4", "1", "4", "4", "2", "1", "1", 4, "4", "1", "4", "4", "1", "4", "2", "1", "2", "2", "1", "2", "1", "1", "1", "4", "1", "1", "1", "1", "4", "2", "2", "1", "4", "1", "4", "1", "4", "3", "1", "1", "2", "1", "4"], "explanation": ["소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 본격적인 프로그램의 구현에 들어가기 전에 정의하는 것입니다.", "행위 모델링의 목적은 시스템 각 구성 요소들의 기능적인 특성을 모델링하는 것입니다.", "계층적 구성을 나타내는 모델의 장점은 정보은닉의 원칙 적용, 높은 이식성을 가집니다.", "요구사항 검증 절차의 순서는 검토 계획 수립 => 검토, 오류 수정 => 베이스라인 설정입니다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성됩니다.", "클래스는 객체지향 기법에서 동일한 형의 특성을 갖는 객체들을 모아 구성한 것이다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "구조적 설계 방법론은 요구사항 분석, 구조적 분석, 구조적 설계 단계로 구성되며, 구조적 프로그래밍은 설계 단계 이후의 과정입니다.", "정적 관점은 소프트웨어 내부의 구성 요소 사이의 구조적 관계를 나타낸다.", "소프트웨어의 구성 요소에는 객체, 클래스, 메시지가 포함된다.", "소프트웨어 개발에서 사용되는 그래픽 표기법은 UML이다.", "시퀀스 다이어그램의 구성 항목에는 객체, 메시지, 시간축이 포함된다.", "소프트웨어의 특징을 설명하는 것은 입력, 처리, 출력, 제어, 피드백으로 구성된다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "ALTER VIEW 문은 뷰의 정의를 변경한다.", "DDL(Data Definition Language) 명령어인 CREATE TABLE을 사용하여 데이터 모델의 물리적 데이터 구조를 정의한다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 객체지향적이지 않다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)이며, Gradle, Jenkins, Makefile은 빌드 자동화 도구로 사용된다.", "절차적 프로그래밍 언어는 정해진 규칙이 없고 절차적이다.", "레벨 3 정의(Defined) 단계는 소프트웨어 공학 원칙에 기반하여 정의된 프로세스입니다.", "소프트웨어 개발 프로세스 성숙도 모델의 5단계는 초기, 정의, 관리, 정량적 관리, 최적화입니다.", "소프트웨어 정의 기술은 네트워크, 데이터 센터 등에서 사용됩니다.", "행위 모델링은 소프트웨어의 구성 요소들 기능과 구성 요소들이 언제, 어떤 순서로 동작하는지 모델링하는 것입니다.", "소프트웨어 개발 조직이 담당하는 작업 종류와 순서, 그리고 각 단계에서 생성되는 소프트웨어의 종류, 시스템의 규모, 난이도, 신뢰도, 조직의 규모 등에 따라 적합한 프로세스를 정의하는 단계는 정의 단계입니다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 합니다.", "구조적 설계의 주요 목표는 시스템의 구조를 설계하는 것입니다.", "모듈 간의 계층적 구성을 나타내는 모델은 계층 모델입니다.", "검증 절차의 첫 단계는 검토 계획 수립입니다.", "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.", "Python은 빌드 도구라기보다는 프로그래밍 언어입니다.", "소프트웨어 개발 방법론은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것입니다.", "상속은 클래스가 재정의 없이 물려받아 사용하는 것입니다.", "모듈화의 원리는 자료에 적용 가능한 오퍼레이션을 함께 정의하는 것입니다.", "Initial 단계는 정의된 프로세스 수행 및 수행을 의미합니다.", "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.", "DDL은 데이터베이스 구조를 정의한다.", "뷰를 정의할 때에 CREATE VIEW 명령어를 사용한다.", "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.", "그룹 함수는 데이터 모델의 구성 요소가 아니다.", "클래스가 재정의 없이 물려받아 사용하는 것을 상속성이라고 한다.", "절차적 프로그래밍 언어는 정해진 규칙이 있고, 절차적이며, 규모가 커질수록 함수가 기하급수적으로 늘어난다. 유연성과 확장성을 제공하는 것은 객체지향 프로그래밍 언어의 특징이다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "객체지향 프로그래밍 언어의 특징에는 캡슐화, 상속성, 다형성 등이 있다. 절차적 프로그래밍은 객체지향 프로그래밍 언어의 특징이 아니다.", "Eclipse는 통합 개발 환경(IDE)의 일종이며, 빌드 도구(Build Tool)는 Gradle, Jenkins, Makefile 등이 있다.", "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 소프트웨어 개발 방법론이라고 한다.", "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성된다.", "스타 구조는 연결되는 중앙 집중식의 네트워크 구성 형태이다.", "폭포수 모형은 소프트웨어 개발 과정의 앞 단계가 끝나야만 다음 단계로 넘어갈 수 있는 선형 순차적 모형이다.", "방화벽 설정의 잘못된 조작으로 인한 네트워크 서버 보안 위협은 관리 오류에 해당한다."], "subject": ["소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어설계", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "소프트웨어개발", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "데이터베이스구축", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "프로그래밍언어활용", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리", "정보시스템구축관리"], "wrong_question": [], "weak_type": [], "notes": [], "user_answer": [], "retrieve_answer": ""}
*3
$9
PEXPIREAT
$30
demo_user:teacher:local:shared
$13
1755393797570
*1
$4
EXEC
