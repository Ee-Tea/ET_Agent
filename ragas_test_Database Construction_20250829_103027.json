{
  "test_info": {
    "subject_area": "Database Construction",
    "timestamp": "20250829_103027",
    "total_questions": 3
  },
  "context": "문서 1: Ⅲ  데이터 베이스 설계 \n \n1. 데이터베이스 설계 \n 1) 도구 : 데이터 모델 \n  (1) 데이터 모델이 표시할 요소 \n   - 구조(Structure) : 개체간의 관계 \n   - 연산(Operation) : 실제 데이터를 처리하는 작업에 대한 명세 \n   - 제약조건(Constraint)  \n 2) 과정 : 요구조건 분석 -> 개념적 설계 -> 논리적 설계 -> 물리적 설계 -> 구현 \n  (1) 개념적 설계: 개념적 데이터 모델(DBMS에 독립) + 트랜잭션 모델링=>ER다이어그램 \n  (2) 논리적 설계 : 사용할 DBMS에 맞는 논리적 데이터 모델 설계 \n  (3) 물리적 설계 : 물리적 저장 장치에 저장할 수 있도록 물리적 데이터 모델로 변환  \n \n2. 개념적 모델링 - E-R 다이어그램 (Entity-Relationship) \n기호 의미 \n \n개체 (Entity) \n \n관계 (Relationship) \n \n속성 (Attribute) \n 개체타입과 속성을 연결 \n \n3. 논리적 모델링 – 정규화 수행 \n 1) 목적 : 데이터의 중복성을 최소화하고 일관성을 보장하여 이상(anomaly) 발생 방지 \n  => 이상 : 데이터의 불필요한 중복으로 인한 이상 현상 (삽입 이상, 삭제 이상, 갱신 이상)\n\n문서 2: 는 물리적 구조의 데이터로 변환하는 과정이다.\n•  물리적 설계 단계에서는 다양한 데이터베이스 응용에 \n대해 처리 성능을 얻기 위해 데이터베이스 파일의 저장 \n구조 및 액세스 경로를 결정한다.\n•  저장 레코드의 양식, 순서, 접근 경로, 조회가 집중되는 \n레코드와 같은 정보를 사용하여 데이터가 컴퓨터에 저\n장되는 방법을 묘사한다.\n•  물리적 설계 시 고려할 사항 : 트랜잭션 처리량, 응답 시\n간, 디스크 용량, 저장 공간의 효율화 등\n22.4,\t22.3,\t21.8,\t21.5,\t21.3,\t20.9\n물리적 설계(데이터 구조화)\n2407607\n166핵심\n23.2,\t22.4\t,\t20.9\n데이터 모델\n2459916\n167핵심\nE-R 모델은 개념적 데이터 모델의 가장 대표적인 것으\n로, 1976년 피터 첸(Peter Chen)에 의해 제안되고 기본적\n인 구성 요소가 정립되었다.\n•  E-R 모델은 개체 타입(Entity Type)과 이들 간의 관계 \n타입(Relationship Type)을 이용해 현실 세계를 개념적\n으로 표현한다.\n•  E-R 모델에서는 데이터를 개체(Entity), 관계\n(Relationship), 속성(Attribute)으로 묘사한다.\n• E-R 모델은 특정 DBMS를 고려한 것은 아니다.\n•  E-R 다이어그램으로 표현하며, 1:1, 1:N, N:M 등의 관\n계 유형을 제한 없이 나타낼 수 있다.\n23.7,\t22.7\nE - R 모델의 개요\n2408201\n168핵심\n23.7,\t22.7,\t22.3,\t21.5,\t21.3,\t20.9,\t20.6\nE-R 다이어그램\n2408202\n169핵심\n기호 기호 이름 의미\n사각형 개체(Entity)\t타입\n마름모 관계(Relationship)\t타입\n타원 속성(Attribute)\n이중\t타원 다중값\t속성(복합\t속성)\n밑줄\t타원 기본키\t속성\n복수\t타원 복합\t속성\n\t성명은\t성과\t이름으로\t구성\nN M 관계\n1\t:\t1,\t1\t:\tN,\tN\t:\tM\t등의\t개체\t간\t관\n계에\t대한\t대응수를\t선\t위에\t기\n술함\n\n문서 3: 이션\t테스트\t프레임워크\nwatir Ruby를\t사용하는\t애플리케이션\t테스트\t프레임워크\n\t\n데이터베이스 설계 순서\n2407603\n163핵심\n개념적 설계란 정보의 구조를 얻기 위하여 현실 세계의 무\n한성과 계속성을 이해하고, 다른 사람과 통신하기 위하여 \n현실 세계에 대한 인식을 추상적 개념으로 표현하는 과정\n이다. \n•  개념적 설계 단계에서는 개념 스키마 모델링과 트랜잭\n션 모델링을 병행 수행한다. \n•  개념적 설계 단계에서는 요구 분석 단계에서 나온 결과\n인 요구 조건 명세를 DBMS에 독립적인 E-R 다이어그\n램으로 작성한다. \n•  DBMS에 독립적인 개념 스키마를 설계한다.  \n23.2,\t22.4\n개념적 설계(정보 모델링,  \n개념화)\n2407605\n164핵심\n22.7,\t20.6\n논리적 설계(데이터 모델링)\n2407606\n165핵심\n2024 메일링핵심 정보처리기사 필기(001~116)_ej2.indd   47 2024. 5. 8.   오후 3:49\n\n문서 4: 필기과목명 문제수 주요항목 세부항목 세세항목\n데이터베이스구축 20 4. 물리 데이터베이스\n설계\n1. 물리요소 조사 분석 2. 분산 데이터베이스\n3. 데이터베이스 이중화 구성\n4. 데이터베이스 암호화\n5. 접근제어\n2. 데이터베이스 물리속성\n설계\n1. 파티셔닝\n2. 클러스터링\n3. 데이터베이스 백업\n4. 테이블 저장 사이징\n5. 데이터 지역화(locality)\n3. 물리 데이터베이스 모\n델링\n1. 데이터베이스 무결성\n2. 칼럼 속성\n3. 키 종류\n4. 반정규화\n4. 데이터베이스 반정규화 1. 정규화\n5. 물리데이터 모델 품질\n검토\n1. 물리데이터 모델 품질 기준\n2. 물리 E-R 다이어그램\n3. CRUD 분석\n4. SQL 성능 튜닝\n5. 데이터 전환 1. 데이터 전환 기술 1. 초기데이터 구축\n2. ETL(Extraction,\nTransformation, Loading)\n3. 파일 처리 기술\n\n문서 5: 이고 이면 이다X Y Y Z X Z .→ → → \n분해 규칙 ① 이행 규칙② 반사 규칙 ③ 결합 규칙④ 데이터베이스 설계 시 물리적 설계 단계에서 수행하는 사항이 아닌 46. 것은?저장 레코드 양식 설계① 레코드 집중의 분석 및 설계② 접근 경로 설계③ 목표 에 맞는 스키마 설계DBMS④",
  "questions": [
    {
      "question": "데이터베이스 설계 과정에서 개념적 설계 단계의 주요 산출물은 무엇인가?",
      "options": [
        "물리적 데이터 모델",
        "E-R 다이어그램",
        "정규화된 데이터 모델",
        "트랜잭션 모델"
      ],
      "answer": "2",
      "explanation": "개념적 설계 단계에서는 요구 조건 명세를 기반으로 E-R 다이어그램을 작성한다.",
      "subject": "Database Construction"
    },
    {
      "question": "E-R 모델에서 개체와 관계를 표현하는 기호는 무엇인가?",
      "options": [
        "사각형과 마름모",
        "타원과 사각형",
        "마름모와 타원",
        "사각형과 원"
      ],
      "answer": "1",
      "explanation": "E-R 모델에서 개체는 사각형으로, 관계는 마름모로 표현된다.",
      "subject": "Database Construction"
    },
    {
      "question": "물리적 설계 단계에서 고려해야 할 사항이 아닌 것은 무엇인가?",
      "options": [
        "트랜잭션 처리량",
        "응답 시간",
        "디스크 용량",
        "정규화"
      ],
      "answer": "4",
      "explanation": "물리적 설계 단계에서는 정규화가 아닌 데이터의 저장 구조와 액세스 경로를 결정한다.",
      "subject": "Database Construction"
    }
  ],
  "ragas_results": {
    "faithfulness": [
      0.5,
      0.0,
      1.0
    ],
    "answer_relevancy": [
      0.20911293728390343,
      0.5209320921121493,
      0.3075275578261439
    ],
    "context_precision": [
      0.8333333332916666,
      0.8333333332916666,
      0.8333333332916666
    ],
    "context_recall": [
      1.0,
      1.0,
      0.5
    ]
  }
}