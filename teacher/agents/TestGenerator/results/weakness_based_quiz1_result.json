{
  "quiz_type": "weakness_based_llm",
  "difficulty": "중급",
  "weakness_analysis": null,
  "weakness_concepts": [
    "개발"
  ],
  "requested_count": 5,
  "quiz_count": 5,
  "questions": [
    {
      "question": "소프트웨어 개발에서 모듈 설계와 상세 설계의 주요 활동은 무엇인가?",
      "options": [
        "  1. 시스템의 전체 구조와 컴포넌트 간의 인터페이스 정의",
        "  2. 개발 일정을 수립하고 요구사항을 개발자들이 나눠 작업하는 것",
        "  3. 프로그램의 소스코드를 작성하는 것",
        "  4. 시스템의 테스트 계획을 수립하는 것"
      ],
      "answer": "1",
      "explanation": "모듈 설계(Module Design)와 상세 설계(Detail Design)는 소프트웨어 개발 과정의 중요한 단계입니다. 모듈 설계는 시스템의 전체 구조와 컴포넌트 간의 인터페이스를 정의하는 활동입니다. 이는 시스템의 구조적인 부분을 설계하는 것으로, 소프트웨어를 구성하는 컴포넌트의 유형, 인터페이스, 내부 설계 구조 등을 정의합니다. 상세 설계는 각 모듈의 내부 로직과 알고리즘을 구체화하는 단계입니다. 따라서 모듈 설계와 상세 설계의 주요 활동은 시스템의 전체 구조와 컴포넌트 간의 인터페이스를 정의하는 것입니다.",
      "weakness_focus": "개발",
      "subject": "종합",
      "weakness_concept": "개발"
    },
    {
      "question": "다음 중 소프트웨어 개발에서 점진적 개발 프로세스를 선택한 스프린트에 대한 설명으로 옳은 것은?",
      "options": [
        "  1. 개발 준비, 분석, 설계, 구현, 테스트, 전개, 인도 순으로 반복되는 프로세스이다.",
        "  2. 모든 스프린트 주기가 완료되면 제품 기능 목록(Product Backlog)의 개발 목표물이 완성된다.",
        "  3. 스프린트 백로그(Sprint Backlog)는 개발자별로 작성하며, 결과물에 대한 반복 완료 시 모습을 결정한다.",
        "  4. LOC 기법에 의해 예측된 총 라인 수가 36,000 라인, 개발에 참여할 프로그래머가 6명인 경우, 개발 일정을 수립한다."
      ],
      "answer": "1",
      "explanation": "점진적 개발 프로세스는 개발 준비, 분석, 설계, 구현, 테스트, 전개, 인도 순으로 반복되는 프로세스입니다. 이 프로세스는 반복적이고 점진적인 개발을 통해 요구사항을 유연하게 수용하고, 개발 과정의 효율성을 높일 수 있습니다. 따라서 점진적 개발 프로세스를 선택한 스프린트에 대한 설명으로 옳은 것은 개발 준비, 분석, 설계, 구현, 테스트, 전개, 인도 순으로 반복되는 프로세스이다입니다.",
      "weakness_focus": "개발",
      "subject": "종합",
      "weakness_concept": "개발"
    },
    {
      "question": "소프트웨어 개발에서 구조 모델링의 주요 활동은 무엇인가?",
      "options": [
        "  1. 시스템의 기능적 요구사항을 정의하는 것",
        "  2. 시스템의 성능 요구사항을 정의하는 것",
        "  3. 소프트웨어를 구성하는 컴포넌트의 유형, 인터페이스, 내부 설계 구조 등을 정의하는 것",
        "  4. 시스템의 테스트 계획을 수립하는 것"
      ],
      "answer": "3",
      "explanation": "구조 모델링은 소프트웨어를 구성하는 컴포넌트의 유형, 인터페이스, 내부 설계 구조 등을 정의하는 활동입니다. 이는 시스템의 구조적인 부분을 모델링하는 것으로, 소프트웨어의 구성 요소와 이들 간의 관계를 명확히 정의합니다. 구조 모델링은 소프트웨어 개발의 중요한 단계 중 하나로, 시스템의 전체적인 구조와 컴포넌트 간의 인터페이스를 정의합니다.",
      "weakness_focus": "개발",
      "subject": "종합",
      "weakness_concept": "개발"
    },
    {
      "question": "다음 중 소프트웨어 개발에서 개발자별로 스프린트 백로그(Sprint Backlog)를 작성하는 목적으로 옳은 것은?",
      "options": [
        "  1. 개발 일정을 수립하고 요구사항을 개발자들이 나눠 작업할 수 있도록 하는 것",
        "  2. 시스템의 테스트 계획을 수립하는 것",
        "  3. 프로그램의 소스코드를 작성하는 것",
        "  4. 결과물에 대한 반복 완료 시 모습을 결정하는 것"
      ],
      "answer": "1",
      "explanation": "스프린트 백로그(Sprint Backlog)는 개발자별로 작성하며, 개발 일정을 수립하고 요구사항을 개발자들이 나눠 작업할 수 있도록 하는 것입니다. 스프린트 백로그는 스프린트 기간 동안 수행할 작업과 예상 소요 시간 등을 포함합니다. 이는 개발자들이 자신의 작업을 계획하고 진행 상황을 추적하는 데 도움이 됩니다.",
      "weakness_focus": "개발",
      "subject": "종합",
      "weakness_concept": "개발"
    },
    {
      "question": "소프트웨어 개발에서 모듈 설계(Module Design)와 상세 설계(Detail Design)를 통틀어 무엇이라고 합니까?",
      "options": [
        "  1. 구조 모델링",
        "  2. 시스템 설계",
        "  3. 하위 설계",
        "  4. 상위 설계"
      ],
      "answer": "2",
      "explanation": "시스템 설계는 소프트웨어 개발에서 모듈 설계(Module Design)와 상세 설계(Detail Design)를 통틀어 하는 말입니다. 시스템 설계는 시스템의 구성 요소, 인터페이스, 내부 구조 등을 정의하는 과정입니다.",
      "weakness_focus": "개발",
      "subject": "종합",
      "weakness_concept": "개발"
    }
  ],
  "generation_summary": {
    "analyzed_concepts": 1,
    "generated_questions": 5,
    "success_rate": "100.0%",
    "focus_subjects": []
  },
  "status": "SUCCESS"
}