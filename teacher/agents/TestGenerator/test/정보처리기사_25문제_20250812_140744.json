{
  "exam_title": "정보처리기사 모의고사",
  "total_questions": 25,
  "difficulty": "중급",
  "subjects": {
    "소프트웨어설계": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?",
          "options": [
            "  1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것",
            "  2. 소프트웨어의 요구사항을 분석하는 것",
            "  3. 소프트웨어의 구현을 담당하는 것",
            "  4. 소프트웨어의 테스트를 담당하는 것"
          ],
          "answer": "1",
          "explanation": "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "소프트웨어 생명 주기의 단계 중 '어떻게(How)'에 초점을 둔 단계는 무엇입니까?",
          "options": [
            "  1. 정의 단계",
            "  2. 개발 단계",
            "  3. 유지보수 단계",
            "  4. 계획 단계"
          ],
          "answer": "2",
          "explanation": "소프트웨어 생명 주기의 개발 단계는 '어떻게(How)'에 초점을 둔 실제적인 소프트웨어 개발 단계입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "폭포수 모형의 특징으로 옳지 않은 것은 무엇입니까?",
          "options": [
            "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
            "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
            "  3. 단계별 정의가 분명하고, 전체 공조의 이해가 용이",
            "  4. 사용자들이 모든 요구사항들을 명확하게 제시할 필요 없음"
          ],
          "answer": "4",
          "explanation": "폭포수 모형은 사용자가 모든 요구사항들을 명확하게 제시해야 하는 특징이 있습니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "구조적 방법론의 단계로 옳지 않은 것은 무엇입니까?",
          "options": [
            "  1. 요구사항 분석",
            "  2. 구조적 분석",
            "  3. 구조적 설계",
            "  4. 구현"
          ],
          "answer": "4",
          "explanation": "구조적 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "소프트웨어 공학 원리를 적용한 소프트웨어 개발 생명주기의 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미하는 용어는 무엇입니까?",
          "options": [
            "  1. 소프트웨어 생명 주기",
            "  2. 소프트웨어 공학",
            "  3. 소프트웨어 개발 방법론",
            "  4. 소프트웨어 아키텍처"
          ],
          "answer": "3",
          "explanation": "소프트웨어 개발 방법론은 소프트웨어 공학 원리를 적용한 소프트웨어 개발 생명주기의 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미합니다.",
          "subject": "소프트웨어설계"
        }
      ],
      "status": "SUCCESS"
    },
    "소프트웨어개발": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "소프트웨어 생명 주기의 정의 단계에서 수행하는 주요 활동은 무엇입니까?",
          "options": [
            "  1. 타당성 검토",
            "  2. 개발 계획 수립",
            "  3. 요구 사항 분석",
            "  4. 시스템 설계"
          ],
          "answer": "3",
          "explanation": "정의 단계에서는 '무엇'을 처리하는 소프트웨어를 개발할 것인지 정의하며, 요구 사항 분석이 주요 활동입니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "폭포수 모형의 특징으로 옳지 않은 것은 무엇입니까?",
          "options": [
            "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
            "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉬움",
            "  3. 모형의 적용 경험과 성공 사례가 많음",
            "  4. 단계별 정의가 분명하고, 전체 공조의 이해가 용이"
          ],
          "answer": "2",
          "explanation": "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다는 특징이 있습니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "다음 중 소프트웨어 아키텍처의 파이프 필터 형태에 대한 설명으로 옳은 것은 무엇입니까?",
          "options": [
            "  1. 노드와 간선으로 구성된다.",
            "  2. 서브시스템이 입력 데이터를 받아 처리하고 결과를 다음 서브시스템으로 넘겨주는 과정을 반복한다.",
            "  3. 계층 모델이라고도 한다.",
            "  4. 3개의 서브시스템(모델, 뷰, 제어)으로 구성되어 있다."
          ],
          "answer": "2",
          "explanation": "파이프 필터 형태의 소프트웨어 아키텍처는 서브시스템이 입력 데이터를 받아 처리하고 결과를 다음 서브시스템으로 넘겨주는 과정을 반복합니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "UML에서 시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은 무엇입니까?",
          "options": [
            "  1. 생명선",
            "  2. 실행",
            "  3. 확장",
            "  4. 메시지"
          ],
          "answer": "3",
          "explanation": "시퀀스 다이어그램의 구성 항목에는 생명선, 실행, 메시지가 포함되지만 확장은 포함되지 않습니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는 무엇입니까?",
          "options": [
            "  1. GUI(Graphical User Interface)",
            "  2. CLI(Command Line Interface)",
            "  3. CUI(Cell User Interface)",
            "  4. MUI(Mobile User Interface)"
          ],
          "answer": "2",
          "explanation": "CLI(Command Line Interface)는 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스입니다.",
          "subject": "소프트웨어개발"
        }
      ],
      "status": "SUCCESS"
    },
    "데이터베이스구축": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "DBMS의 정의로 가장 적절한 것은?",
          "options": [
            "  1. 데이터베이스를 생성하고 관리하는 시스템이다.",
            "  2. 데이터베이스의 구조를 설계하는 도구이다.",
            "  3. 데이터베이스의 데이터를 분석하는 도구이다.",
            "  4. 데이터베이스의 보안을 관리하는 시스템이다."
          ],
          "answer": "1",
          "explanation": "DBMS는 데이터베이스를 생성하고 관리하는 시스템이다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "DDL의 종류로 NOT INCLUDED 되는 것은?",
          "options": [
            "  1. CREATE",
            "  2. ALTER",
            "  3. SELECT",
            "  4. DROP"
          ],
          "answer": "3",
          "explanation": "SELECT는 DML에 포함되는 명령어이다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?",
          "options": [
            "  1. 요구 조건 분석",
            "  2. 개념적 설계",
            "  3. 논리적 설계",
            "  4. 물리적 설계"
          ],
          "answer": "4",
          "explanation": "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어진다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "릴레이션의 차수가 4이고 카디널리티가 5이며, 릴레이션 S의 차수가 6이고 카디널리티가 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?",
          "options": [
            "  1. 24, 35",
            "  2. 24, 12",
            "  3. 10, 35",
            "  4. 10, 12"
          ],
          "answer": "1",
          "explanation": "카티션 프로덕트의 결과로 차수는 4+6=10, 카디널리티는 5*7=35가 된다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "관계대수 연산자 중 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용하는 것은?",
          "options": [
            "  1. Select",
            "  2. Project",
            "  3. Join",
            "  4. Division"
          ],
          "answer": "1",
          "explanation": "Select 연산자는 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용한다.",
          "subject": "데이터베이스구축"
        }
      ],
      "status": "SUCCESS"
    },
    "프로그래밍언어활용": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것은 무엇입니까?",
          "options": [
            "  1. 운영체제는 컴퓨터 하드웨어를 관리한다.",
            "  2. 운영체제는 응용 프로그램을 개발한다.",
            "  3. 운영체제는 컴퓨터 네트워크를 관리한다.",
            "  4. 운영체제는 데이터베이스를 관리한다."
          ],
          "answer": "1",
          "explanation": "운영체제는 컴퓨터 하드웨어를 관리하고, 응용 프로그램이 실행될 수 있는 환경을 제공한다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램은 무엇입니까?",
          "options": [
            "  1. 운영체제",
            "  2. 언어 번역 프로그램",
            "  3. 매크로 프로세서",
            "  4. 웹 브라우저"
          ],
          "answer": "1",
          "explanation": "운영체제는 시스템 소프트웨어의 대표적인 프로그램으로, 컴퓨터 시스템을 관리하고 제어한다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "데이터 통신 시스템의 특징에는 고속 ․ 고품질의 통신 서비스 제공, 고성능의 에러 제어 방식 등이 있습니다. 다음 중 데이터 통신 시스템의 특징이 아닌 것은 무엇입니까?",
          "options": [
            "  1. 고속 ․ 고품질의 통신 서비스 제공",
            "  2. 고성능의 에러 제어 방식",
            "  3. 대용량 파일의 공동 이용",
            "  4. 정보통신망의 저속화"
          ],
          "answer": "4",
          "explanation": "정보통신망의 초고속화 및 글로벌화가 데이터 통신 시스템의 특징이지, 저속화는 아니다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "분산 처리 시스템은 여러 개의 컴퓨터를 통신 회선으로 연결하여 하나의 작업을 처리하는 방식입니다. 다음 중 분산 처리 시스템의 특징은 무엇입니까?",
          "options": [
            "  1. 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리한다.",
            "  2. 하나의 컴퓨터로 여러 작업을 처리한다.",
            "  3. 데이터베이스를 관리한다.",
            "  4. 운영체제를 관리한다."
          ],
          "answer": "1",
          "explanation": "분산 처리 시스템은 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 기능으로 볼 수 없는 것은?",
          "options": [
            "  1. 프로세스 관리",
            "  2. 메모리 관리",
            "  3. 파일 시스템 관리",
            "  4. 웹 브라우저 제공"
          ],
          "answer": "4",
          "explanation": "운영체제의 주요 기능에는 프로세스 관리, 메모리 관리, 파일 시스템 관리 등이 포함되지만, 웹 브라우저 제공은 운영체제의 기능이 아닙니다.",
          "subject": "프로그래밍언어활용"
        }
      ],
      "status": "SUCCESS"
    },
    "정보시스템구축관리": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "소프트웨어 생명주기 모형 중 폭포수 모형의 특징으로 옳지 않은 것은?",
          "options": [
            "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
            "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
            "  3. 단계별 정의가 분명하고, 전체 공조의 이해가 용이",
            "  4. 사용자들이 모든 요구사항들을 명확하게 제시하지 않아도 됨"
          ],
          "answer": "4",
          "explanation": "폭포수 모형은 사용자가 모든 요구사항을 명확하게 제시해야 함",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라 하는가?",
          "options": [
            "  1. 소프트웨어 공학",
            "  2. 시스템 개발 방법론",
            "  3. 정보공학 방법론",
            "  4. 구조적 방법론"
          ],
          "answer": "1",
          "explanation": "소프트웨어 공학은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
          "options": [
            "  1. Package Diagram",
            "  2. State Transition Diagram",
            "  3. Deployment Diagram",
            "  4. Entity-Relationship Diagram"
          ],
          "answer": "4",
          "explanation": "Entity-Relationship Diagram은 데이터베이스 설계에 사용되는 모델링 언어",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "미들웨어(Middleware)에 대한 설명으로 틀린 것은?",
          "options": [
            "  1. 여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.",
            "  2. 미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 수 있어야 한다.",
            "  3. 소프트웨어 컴포넌트를 연결하기 위한 것",
            "  4. 분산 컴퓨팅을 지원하기 위한 것"
          ],
          "answer": "2",
          "explanation": "미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 필요는 없음",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "구조적 방법론의 구성 단계로 옳지 않은 것은?",
          "options": [
            "  1. 요구사항 분석",
            "  2. 구조적 분석",
            "  3. 구조적 설계",
            "  4. 테스트 단계"
          ],
          "answer": "4",
          "explanation": "테스트 단계는 구조적 방법론의 구성 단계가 아님",
          "subject": "정보시스템구축관리"
        }
      ],
      "status": "SUCCESS"
    }
  },
  "all_questions": [
    {
      "question": "소프트웨어 아키텍처의 정의로 가장 적절한 것은 무엇입니까?",
      "options": [
        "  1. 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것",
        "  2. 소프트웨어의 요구사항을 분석하는 것",
        "  3. 소프트웨어의 구현을 담당하는 것",
        "  4. 소프트웨어의 테스트를 담당하는 것"
      ],
      "answer": "1",
      "explanation": "소프트웨어 아키텍처는 소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "소프트웨어 생명 주기의 단계 중 '어떻게(How)'에 초점을 둔 단계는 무엇입니까?",
      "options": [
        "  1. 정의 단계",
        "  2. 개발 단계",
        "  3. 유지보수 단계",
        "  4. 계획 단계"
      ],
      "answer": "2",
      "explanation": "소프트웨어 생명 주기의 개발 단계는 '어떻게(How)'에 초점을 둔 실제적인 소프트웨어 개발 단계입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "폭포수 모형의 특징으로 옳지 않은 것은 무엇입니까?",
      "options": [
        "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
        "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
        "  3. 단계별 정의가 분명하고, 전체 공조의 이해가 용이",
        "  4. 사용자들이 모든 요구사항들을 명확하게 제시할 필요 없음"
      ],
      "answer": "4",
      "explanation": "폭포수 모형은 사용자가 모든 요구사항들을 명확하게 제시해야 하는 특징이 있습니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "구조적 방법론의 단계로 옳지 않은 것은 무엇입니까?",
      "options": [
        "  1. 요구사항 분석",
        "  2. 구조적 분석",
        "  3. 구조적 설계",
        "  4. 구현"
      ],
      "answer": "4",
      "explanation": "구조적 방법론의 단계는 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "소프트웨어 공학 원리를 적용한 소프트웨어 개발 생명주기의 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미하는 용어는 무엇입니까?",
      "options": [
        "  1. 소프트웨어 생명 주기",
        "  2. 소프트웨어 공학",
        "  3. 소프트웨어 개발 방법론",
        "  4. 소프트웨어 아키텍처"
      ],
      "answer": "3",
      "explanation": "소프트웨어 개발 방법론은 소프트웨어 공학 원리를 적용한 소프트웨어 개발 생명주기의 전 과정에 지속적으로 작용할 수 있는 방법, 절차, 기법 등을 의미합니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "소프트웨어 생명 주기의 정의 단계에서 수행하는 주요 활동은 무엇입니까?",
      "options": [
        "  1. 타당성 검토",
        "  2. 개발 계획 수립",
        "  3. 요구 사항 분석",
        "  4. 시스템 설계"
      ],
      "answer": "3",
      "explanation": "정의 단계에서는 '무엇'을 처리하는 소프트웨어를 개발할 것인지 정의하며, 요구 사항 분석이 주요 활동입니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "폭포수 모형의 특징으로 옳지 않은 것은 무엇입니까?",
      "options": [
        "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
        "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 쉬움",
        "  3. 모형의 적용 경험과 성공 사례가 많음",
        "  4. 단계별 정의가 분명하고, 전체 공조의 이해가 용이"
      ],
      "answer": "2",
      "explanation": "폭포수 모형은 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다는 특징이 있습니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "다음 중 소프트웨어 아키텍처의 파이프 필터 형태에 대한 설명으로 옳은 것은 무엇입니까?",
      "options": [
        "  1. 노드와 간선으로 구성된다.",
        "  2. 서브시스템이 입력 데이터를 받아 처리하고 결과를 다음 서브시스템으로 넘겨주는 과정을 반복한다.",
        "  3. 계층 모델이라고도 한다.",
        "  4. 3개의 서브시스템(모델, 뷰, 제어)으로 구성되어 있다."
      ],
      "answer": "2",
      "explanation": "파이프 필터 형태의 소프트웨어 아키텍처는 서브시스템이 입력 데이터를 받아 처리하고 결과를 다음 서브시스템으로 넘겨주는 과정을 반복합니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "UML에서 시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은 무엇입니까?",
      "options": [
        "  1. 생명선",
        "  2. 실행",
        "  3. 확장",
        "  4. 메시지"
      ],
      "answer": "3",
      "explanation": "시퀀스 다이어그램의 구성 항목에는 생명선, 실행, 메시지가 포함되지만 확장은 포함되지 않습니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는 무엇입니까?",
      "options": [
        "  1. GUI(Graphical User Interface)",
        "  2. CLI(Command Line Interface)",
        "  3. CUI(Cell User Interface)",
        "  4. MUI(Mobile User Interface)"
      ],
      "answer": "2",
      "explanation": "CLI(Command Line Interface)는 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스입니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "DBMS의 정의로 가장 적절한 것은?",
      "options": [
        "  1. 데이터베이스를 생성하고 관리하는 시스템이다.",
        "  2. 데이터베이스의 구조를 설계하는 도구이다.",
        "  3. 데이터베이스의 데이터를 분석하는 도구이다.",
        "  4. 데이터베이스의 보안을 관리하는 시스템이다."
      ],
      "answer": "1",
      "explanation": "DBMS는 데이터베이스를 생성하고 관리하는 시스템이다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "DDL의 종류로 NOT INCLUDED 되는 것은?",
      "options": [
        "  1. CREATE",
        "  2. ALTER",
        "  3. SELECT",
        "  4. DROP"
      ],
      "answer": "3",
      "explanation": "SELECT는 DML에 포함되는 명령어이다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?",
      "options": [
        "  1. 요구 조건 분석",
        "  2. 개념적 설계",
        "  3. 논리적 설계",
        "  4. 물리적 설계"
      ],
      "answer": "4",
      "explanation": "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어진다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "릴레이션의 차수가 4이고 카디널리티가 5이며, 릴레이션 S의 차수가 6이고 카디널리티가 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?",
      "options": [
        "  1. 24, 35",
        "  2. 24, 12",
        "  3. 10, 35",
        "  4. 10, 12"
      ],
      "answer": "1",
      "explanation": "카티션 프로덕트의 결과로 차수는 4+6=10, 카디널리티는 5*7=35가 된다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "관계대수 연산자 중 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용하는 것은?",
      "options": [
        "  1. Select",
        "  2. Project",
        "  3. Join",
        "  4. Division"
      ],
      "answer": "1",
      "explanation": "Select 연산자는 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용한다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것은 무엇입니까?",
      "options": [
        "  1. 운영체제는 컴퓨터 하드웨어를 관리한다.",
        "  2. 운영체제는 응용 프로그램을 개발한다.",
        "  3. 운영체제는 컴퓨터 네트워크를 관리한다.",
        "  4. 운영체제는 데이터베이스를 관리한다."
      ],
      "answer": "1",
      "explanation": "운영체제는 컴퓨터 하드웨어를 관리하고, 응용 프로그램이 실행될 수 있는 환경을 제공한다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램은 무엇입니까?",
      "options": [
        "  1. 운영체제",
        "  2. 언어 번역 프로그램",
        "  3. 매크로 프로세서",
        "  4. 웹 브라우저"
      ],
      "answer": "1",
      "explanation": "운영체제는 시스템 소프트웨어의 대표적인 프로그램으로, 컴퓨터 시스템을 관리하고 제어한다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "데이터 통신 시스템의 특징에는 고속 ․ 고품질의 통신 서비스 제공, 고성능의 에러 제어 방식 등이 있습니다. 다음 중 데이터 통신 시스템의 특징이 아닌 것은 무엇입니까?",
      "options": [
        "  1. 고속 ․ 고품질의 통신 서비스 제공",
        "  2. 고성능의 에러 제어 방식",
        "  3. 대용량 파일의 공동 이용",
        "  4. 정보통신망의 저속화"
      ],
      "answer": "4",
      "explanation": "정보통신망의 초고속화 및 글로벌화가 데이터 통신 시스템의 특징이지, 저속화는 아니다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "분산 처리 시스템은 여러 개의 컴퓨터를 통신 회선으로 연결하여 하나의 작업을 처리하는 방식입니다. 다음 중 분산 처리 시스템의 특징은 무엇입니까?",
      "options": [
        "  1. 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리한다.",
        "  2. 하나의 컴퓨터로 여러 작업을 처리한다.",
        "  3. 데이터베이스를 관리한다.",
        "  4. 운영체제를 관리한다."
      ],
      "answer": "1",
      "explanation": "분산 처리 시스템은 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식이다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 기능으로 볼 수 없는 것은?",
      "options": [
        "  1. 프로세스 관리",
        "  2. 메모리 관리",
        "  3. 파일 시스템 관리",
        "  4. 웹 브라우저 제공"
      ],
      "answer": "4",
      "explanation": "운영체제의 주요 기능에는 프로세스 관리, 메모리 관리, 파일 시스템 관리 등이 포함되지만, 웹 브라우저 제공은 운영체제의 기능이 아닙니다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "소프트웨어 생명주기 모형 중 폭포수 모형의 특징으로 옳지 않은 것은?",
      "options": [
        "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
        "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
        "  3. 단계별 정의가 분명하고, 전체 공조의 이해가 용이",
        "  4. 사용자들이 모든 요구사항들을 명확하게 제시하지 않아도 됨"
      ],
      "answer": "4",
      "explanation": "폭포수 모형은 사용자가 모든 요구사항을 명확하게 제시해야 함",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것을 무엇이라 하는가?",
      "options": [
        "  1. 소프트웨어 공학",
        "  2. 시스템 개발 방법론",
        "  3. 정보공학 방법론",
        "  4. 구조적 방법론"
      ],
      "answer": "1",
      "explanation": "소프트웨어 공학은 소프트웨어 개발 생명주기에 소프트웨어 공학 원리를 적용한 것",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
      "options": [
        "  1. Package Diagram",
        "  2. State Transition Diagram",
        "  3. Deployment Diagram",
        "  4. Entity-Relationship Diagram"
      ],
      "answer": "4",
      "explanation": "Entity-Relationship Diagram은 데이터베이스 설계에 사용되는 모델링 언어",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "미들웨어(Middleware)에 대한 설명으로 틀린 것은?",
      "options": [
        "  1. 여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.",
        "  2. 미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 수 있어야 한다.",
        "  3. 소프트웨어 컴포넌트를 연결하기 위한 것",
        "  4. 분산 컴퓨팅을 지원하기 위한 것"
      ],
      "answer": "2",
      "explanation": "미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 필요는 없음",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "구조적 방법론의 구성 단계로 옳지 않은 것은?",
      "options": [
        "  1. 요구사항 분석",
        "  2. 구조적 분석",
        "  3. 구조적 설계",
        "  4. 테스트 단계"
      ],
      "answer": "4",
      "explanation": "테스트 단계는 구조적 방법론의 구성 단계가 아님",
      "subject": "정보시스템구축관리"
    }
  ],
  "generation_summary": {
    "target_total": 25,
    "actual_total": 25,
    "success_rate": "100.0%",
    "successful_subjects": 5,
    "failed_subjects": 0,
    "completion_status": "COMPLETE",
    "generation_time": "67.6초"
  },
  "failed_subjects": [],
  "model_info": "Groq llama-4-scout-17b-16e-instruct"
}