{
  "exam_title": "정보처리기사 모의고사",
  "total_questions": 25,
  "difficulty": "중급",
  "subjects": {
    "소프트웨어설계": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?",
          "options": [
            "  1. 클래스",
            "  2. 시퀀스",
            "  3. 서브루틴",
            "  4. 설계 원칙"
          ],
          "answer": "1",
          "explanation": "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?",
          "options": [
            "  1. 유효성",
            "  2. 직관성",
            "  3. 무결성",
            "  4. 유연성"
          ],
          "answer": "2",
          "explanation": "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?",
          "options": [
            "  1. GUI(Graphical User Interface)",
            "  2. CLI(Command Line Interface)",
            "  3. CUI(Cell User Interface)",
            "  4. MUI(Mobile User Interface)"
          ],
          "answer": "2",
          "explanation": "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?",
          "options": [
            "  1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.",
            "  2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.",
            "  3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.",
            "  4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."
          ],
          "answer": "2",
          "explanation": "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 더 가치 있게 여깁니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?",
          "options": [
            "  1. Adapter 패턴",
            "  2. Bridge 패턴",
            "  3. Builder 패턴",
            "  4. Proxy 패턴"
          ],
          "answer": "3",
          "explanation": "Builder 패턴은 생성 패턴에 속합니다.",
          "subject": "소프트웨어설계"
        }
      ],
      "status": "SUCCESS"
    },
    "소프트웨어개발": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "소프트웨어 생명 주기의 정의 단계에서 수행하는 주요 활동은 무엇입니까?",
          "options": [
            "  1. 타당성 검토",
            "  2. 개발 계획 수립",
            "  3. 요구 사항 분석",
            "  4. 시스템 설계"
          ],
          "answer": "3",
          "explanation": "정의 단계에서는 '무엇'을 처리하는 소프트웨어를 개발할 것인지 정의하며, 요구 사항 분석이 주요 활동입니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "폭포수 모형의 특징으로 옳지 않은 것은 무엇입니까?",
          "options": [
            "  1. 선형 순차적 모형",
            "  2. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
            "  3. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
            "  4. 사용자가 모든 요구사항들을 명확하게 제시할 필요 없음"
          ],
          "answer": "4",
          "explanation": "폭포수 모형에서는 사용자가 모든 요구사항들을 명확하게 제시해야 합니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "UML에서 시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은 무엇입니까?",
          "options": [
            "  1. 생명선",
            "  2. 실행",
            "  3. 확장",
            "  4. 메시지"
          ],
          "answer": "3",
          "explanation": "시퀀스 다이어그램의 구성 항목에는 생명선, 실행, 메시지가 포함되지만 확장은 포함되지 않습니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "다음 중 소프트웨어 생명 주기 모형의 종류로 옳은 것은 무엇입니까?",
          "options": [
            "  1. 폭포수 모형",
            "  2. 프로토타이핑 모형",
            "  3. 나선형 모형",
            "  4. 이터레이션 모형"
          ],
          "answer": "1",
          "explanation": "폭포수 모형은 전통적인 소프트웨어 생명 주기 모형 중 하나입니다.",
          "subject": "소프트웨어개발"
        },
        {
          "question": "소프트웨어 생명주기 모형 중 폭포수 모형의 특징으로 옳은 것은?",
          "options": [
            "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
            "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 용이함",
            "  3. 사용자들이 모든 요구사항들을 명확하게 제시할 필요 없음",
            "  4. 모형의 적용 경험과 성공 사례가 없음"
          ],
          "answer": "1",
          "explanation": "폭포수 모형은 각 단계가 끝난 후 결과물이 명확히 나와야 하며, 개발 공정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다는 특징이 있습니다.",
          "subject": "소프트웨어개발"
        }
      ],
      "status": "SUCCESS"
    },
    "데이터베이스구축": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "DBMS의 정의로 옳은 것은?",
          "options": [
            "  1. 데이터베이스의 구조를 정의한다.",
            "  2. 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.",
            "  3. 데이터베이스의 백업 및 회복 전략을 정의한다.",
            "  4. 데이터 사전을 구성한다."
          ],
          "answer": "2",
          "explanation": "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "DDL의 종류로 옳지 않은 것은?",
          "options": [
            "  1. CREATE",
            "  2. ALTER",
            "  3. SELECT",
            "  4. DROP"
          ],
          "answer": "3",
          "explanation": "SELECT는 DML(Data Manipulation Language)에 속한다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?",
          "options": [
            "  1. 요구 조건 분석",
            "  2. 개념적 설계",
            "  3. 논리적 설계",
            "  4. 물리적 설계"
          ],
          "answer": "4",
          "explanation": "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어진다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "릴레이션의 차수가 4이고 카디널리티가 5이며, 릴레이션 S의 차수가 6이고 카디널리티가 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?",
          "options": [
            "  1. 24, 35",
            "  2. 24, 12",
            "  3. 10, 35",
            "  4. 10, 12"
          ],
          "answer": "1",
          "explanation": "카티션 프로덕트의 결과로 차수는 4+6=10, 카디널리티는 5*7=35가 된다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "관계대수 연산자 중 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용하는 것은?",
          "options": [
            "  1. Select",
            "  2. Project",
            "  3. Join",
            "  4. Division"
          ],
          "answer": "1",
          "explanation": "Select 연산자는 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용한다.",
          "subject": "데이터베이스구축"
        }
      ],
      "status": "SUCCESS"
    },
    "프로그래밍언어활용": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것은 무엇입니까?",
          "options": [
            "  1. 운영체제는 컴퓨터 하드웨어를 관리합니다.",
            "  2. 운영체제는 응용 프로그램을 개발합니다.",
            "  3. 운영체제는 데이터베이스를 관리합니다.",
            "  4. 운영체제는 네트워크를 구성합니다."
          ],
          "answer": "1",
          "explanation": "운영체제는 컴퓨터 하드웨어를 관리하고, 응용 프로그램이 실행될 수 있는 환경을 제공합니다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램은 무엇입니까?",
          "options": [
            "  1. 웹 브라우저",
            "  2. 운영체제",
            "  3. 오피스 소프트웨어",
            "  4. 게임 소프트웨어"
          ],
          "answer": "2",
          "explanation": "시스템 소프트웨어의 대표적인 프로그램은 운영체제입니다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "데이터 통신 시스템의 특징에는 고속 ․ 고품질의 통신 서비스 제공, 고성능의 에러 제어 방식 등이 있습니다. 다음 중 데이터 통신 시스템의 특징이 아닌 것은 무엇입니까?",
          "options": [
            "  1. 고속 ․ 고품질의 통신 서비스 제공",
            "  2. 고성능의 에러 제어 방식",
            "  3. 대용량 파일의 공동 이용",
            "  4. 수동적인 데이터 처리"
          ],
          "answer": "4",
          "explanation": "데이터 통신 시스템의 특징에는 수동적인 데이터 처리는 포함되지 않습니다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "분산 처리 시스템은 여러 개의 컴퓨터를 통신 회선으로 연결하여 하나의 작업을 처리하는 방식입니다. 다음 중 분산 처리 시스템의 특징은 무엇입니까?",
          "options": [
            "  1. 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리합니다.",
            "  2. 하나의 컴퓨터에서 여러 작업을 처리합니다.",
            "  3. 데이터베이스를 관리합니다.",
            "  4. 네트워크를 구성합니다."
          ],
          "answer": "1",
          "explanation": "분산 처리 시스템은 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식입니다.",
          "subject": "프로그래밍언어활용"
        },
        {
          "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 기능으로 볼 수 없는 것은?",
          "options": [
            "  1. 프로세스 관리",
            "  2. 메모리 관리",
            "  3. 데이터베이스 관리",
            "  4. 웹 브라우저 제공"
          ],
          "answer": "4",
          "explanation": "운영체제의 주요 기능에는 프로세스 관리, 메모리 관리 등이 포함되지만, 웹 브라우저 제공은 운영체제의 기능이 아닙니다.",
          "subject": "프로그래밍언어활용"
        }
      ],
      "status": "SUCCESS"
    },
    "정보시스템구축관리": {
      "requested_count": 5,
      "actual_count": 5,
      "questions": [
        {
          "question": "소프트웨어 생명주기 모형 중 폭포수 모형의 특징으로 옳지 않은 것은?",
          "options": [
            "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
            "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
            "  3. 단계별 정의가 분명하고, 전체 공조의 이해가 용이",
            "  4. 사용자들이 모든 요구사항들을 명확하게 제시하지 않아도 됨"
          ],
          "answer": "4",
          "explanation": "폭포수 모형은 사용자가 모든 요구사항을 명확하게 제시해야 함",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
          "options": [
            "  1. Package Diagram",
            "  2. State Transition Diagram",
            "  3. Deployment Diagram",
            "  4. Entity-Relationship Diagram"
          ],
          "answer": "4",
          "explanation": "Entity-Relationship Diagram은 데이터베이스 설계에 사용되는 모델링 언어",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "미들웨어(Middleware)에 대한 설명으로 틀린 것은?",
          "options": [
            "  1. 여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.",
            "  2. 미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 수 있어야 한다.",
            "  3. 소프트웨어 컴포넌트를 연결하기 위한 것임",
            "  4. 분산 컴퓨팅을 지원하기 위한 것임"
          ],
          "answer": "2",
          "explanation": "미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 필요는 없음",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "구조적 방법론의 구성 단계로 옳은 것은?",
          "options": [
            "  1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍",
            "  2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍, 테스트",
            "  3. 구조적 분석, 구조적 설계, 구조적 프로그래밍, 유지보수",
            "  4. 요구사항 분석, 구조적 분석, 테스트, 유지보수"
          ],
          "answer": "1",
          "explanation": "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성",
          "subject": "정보시스템구축관리"
        },
        {
          "question": "다음 중 병행수행으로 발생할 수 있는 문제점이 아닌 것은?",
          "options": [
            "  1. 갱신 분실(Lost Update)",
            "  2. 완료 의존성(Committed Dependency)",
            "  3. 모순성(Inconsistency)",
            "  4. 연쇄 복귀(Cascading Rollback)"
          ],
          "answer": "2",
          "explanation": "완료 의존성(Committed Dependency)은 병행수행으로 발생할 수 있는 문제점이 아닙니다.",
          "subject": "정보시스템구축관리"
        }
      ],
      "status": "SUCCESS"
    }
  },
  "all_questions": [
    {
      "question": "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?",
      "options": [
        "  1. 클래스",
        "  2. 시퀀스",
        "  3. 서브루틴",
        "  4. 설계 원칙"
      ],
      "answer": "1",
      "explanation": "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?",
      "options": [
        "  1. 유효성",
        "  2. 직관성",
        "  3. 무결성",
        "  4. 유연성"
      ],
      "answer": "2",
      "explanation": "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?",
      "options": [
        "  1. GUI(Graphical User Interface)",
        "  2. CLI(Command Line Interface)",
        "  3. CUI(Cell User Interface)",
        "  4. MUI(Mobile User Interface)"
      ],
      "answer": "2",
      "explanation": "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?",
      "options": [
        "  1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.",
        "  2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.",
        "  3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.",
        "  4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."
      ],
      "answer": "2",
      "explanation": "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 더 가치 있게 여깁니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?",
      "options": [
        "  1. Adapter 패턴",
        "  2. Bridge 패턴",
        "  3. Builder 패턴",
        "  4. Proxy 패턴"
      ],
      "answer": "3",
      "explanation": "Builder 패턴은 생성 패턴에 속합니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "소프트웨어 생명 주기의 정의 단계에서 수행하는 주요 활동은 무엇입니까?",
      "options": [
        "  1. 타당성 검토",
        "  2. 개발 계획 수립",
        "  3. 요구 사항 분석",
        "  4. 시스템 설계"
      ],
      "answer": "3",
      "explanation": "정의 단계에서는 '무엇'을 처리하는 소프트웨어를 개발할 것인지 정의하며, 요구 사항 분석이 주요 활동입니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "폭포수 모형의 특징으로 옳지 않은 것은 무엇입니까?",
      "options": [
        "  1. 선형 순차적 모형",
        "  2. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
        "  3. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
        "  4. 사용자가 모든 요구사항들을 명확하게 제시할 필요 없음"
      ],
      "answer": "4",
      "explanation": "폭포수 모형에서는 사용자가 모든 요구사항들을 명확하게 제시해야 합니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "UML에서 시퀀스 다이어그램의 구성 항목에 해당하지 않는 것은 무엇입니까?",
      "options": [
        "  1. 생명선",
        "  2. 실행",
        "  3. 확장",
        "  4. 메시지"
      ],
      "answer": "3",
      "explanation": "시퀀스 다이어그램의 구성 항목에는 생명선, 실행, 메시지가 포함되지만 확장은 포함되지 않습니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "다음 중 소프트웨어 생명 주기 모형의 종류로 옳은 것은 무엇입니까?",
      "options": [
        "  1. 폭포수 모형",
        "  2. 프로토타이핑 모형",
        "  3. 나선형 모형",
        "  4. 이터레이션 모형"
      ],
      "answer": "1",
      "explanation": "폭포수 모형은 전통적인 소프트웨어 생명 주기 모형 중 하나입니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "소프트웨어 생명주기 모형 중 폭포수 모형의 특징으로 옳은 것은?",
      "options": [
        "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
        "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 용이함",
        "  3. 사용자들이 모든 요구사항들을 명확하게 제시할 필요 없음",
        "  4. 모형의 적용 경험과 성공 사례가 없음"
      ],
      "answer": "1",
      "explanation": "폭포수 모형은 각 단계가 끝난 후 결과물이 명확히 나와야 하며, 개발 공정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어렵다는 특징이 있습니다.",
      "subject": "소프트웨어개발"
    },
    {
      "question": "DBMS의 정의로 옳은 것은?",
      "options": [
        "  1. 데이터베이스의 구조를 정의한다.",
        "  2. 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.",
        "  3. 데이터베이스의 백업 및 회복 전략을 정의한다.",
        "  4. 데이터 사전을 구성한다."
      ],
      "answer": "2",
      "explanation": "DBMS는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "DDL의 종류로 옳지 않은 것은?",
      "options": [
        "  1. CREATE",
        "  2. ALTER",
        "  3. SELECT",
        "  4. DROP"
      ],
      "answer": "3",
      "explanation": "SELECT는 DML(Data Manipulation Language)에 속한다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?",
      "options": [
        "  1. 요구 조건 분석",
        "  2. 개념적 설계",
        "  3. 논리적 설계",
        "  4. 물리적 설계"
      ],
      "answer": "4",
      "explanation": "물리적 설계 단계에서 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계가 이루어진다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "릴레이션의 차수가 4이고 카디널리티가 5이며, 릴레이션 S의 차수가 6이고 카디널리티가 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?",
      "options": [
        "  1. 24, 35",
        "  2. 24, 12",
        "  3. 10, 35",
        "  4. 10, 12"
      ],
      "answer": "1",
      "explanation": "카티션 프로덕트의 결과로 차수는 4+6=10, 카디널리티는 5*7=35가 된다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "관계대수 연산자 중 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용하는 것은?",
      "options": [
        "  1. Select",
        "  2. Project",
        "  3. Join",
        "  4. Division"
      ],
      "answer": "1",
      "explanation": "Select 연산자는 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용한다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 특징을 설명한 것은 무엇입니까?",
      "options": [
        "  1. 운영체제는 컴퓨터 하드웨어를 관리합니다.",
        "  2. 운영체제는 응용 프로그램을 개발합니다.",
        "  3. 운영체제는 데이터베이스를 관리합니다.",
        "  4. 운영체제는 네트워크를 구성합니다."
      ],
      "answer": "1",
      "explanation": "운영체제는 컴퓨터 하드웨어를 관리하고, 응용 프로그램이 실행될 수 있는 환경을 제공합니다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "시스템 소프트웨어의 종류에는 운영체제, 언어 번역 프로그램, 매크로 프로세서 등이 있습니다. 다음 중 시스템 소프트웨어의 대표적인 프로그램은 무엇입니까?",
      "options": [
        "  1. 웹 브라우저",
        "  2. 운영체제",
        "  3. 오피스 소프트웨어",
        "  4. 게임 소프트웨어"
      ],
      "answer": "2",
      "explanation": "시스템 소프트웨어의 대표적인 프로그램은 운영체제입니다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "데이터 통신 시스템의 특징에는 고속 ․ 고품질의 통신 서비스 제공, 고성능의 에러 제어 방식 등이 있습니다. 다음 중 데이터 통신 시스템의 특징이 아닌 것은 무엇입니까?",
      "options": [
        "  1. 고속 ․ 고품질의 통신 서비스 제공",
        "  2. 고성능의 에러 제어 방식",
        "  3. 대용량 파일의 공동 이용",
        "  4. 수동적인 데이터 처리"
      ],
      "answer": "4",
      "explanation": "데이터 통신 시스템의 특징에는 수동적인 데이터 처리는 포함되지 않습니다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "분산 처리 시스템은 여러 개의 컴퓨터를 통신 회선으로 연결하여 하나의 작업을 처리하는 방식입니다. 다음 중 분산 처리 시스템의 특징은 무엇입니까?",
      "options": [
        "  1. 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리합니다.",
        "  2. 하나의 컴퓨터에서 여러 작업을 처리합니다.",
        "  3. 데이터베이스를 관리합니다.",
        "  4. 네트워크를 구성합니다."
      ],
      "answer": "1",
      "explanation": "분산 처리 시스템은 여러 개의 컴퓨터를 연결하여 하나의 작업을 처리하는 방식입니다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "운영체제의 종류에는 Windows, UNIX, Linux 등이 있습니다. 다음 중 운영체제의 기능으로 볼 수 없는 것은?",
      "options": [
        "  1. 프로세스 관리",
        "  2. 메모리 관리",
        "  3. 데이터베이스 관리",
        "  4. 웹 브라우저 제공"
      ],
      "answer": "4",
      "explanation": "운영체제의 주요 기능에는 프로세스 관리, 메모리 관리 등이 포함되지만, 웹 브라우저 제공은 운영체제의 기능이 아닙니다.",
      "subject": "프로그래밍언어활용"
    },
    {
      "question": "소프트웨어 생명주기 모형 중 폭포수 모형의 특징으로 옳지 않은 것은?",
      "options": [
        "  1. 각 단계가 끝난 후 결과물이 명확히 나와야 함",
        "  2. 개발 과정 중에 발생하는 새로운 요구나 경험을 설계에 반영하기 어려움",
        "  3. 단계별 정의가 분명하고, 전체 공조의 이해가 용이",
        "  4. 사용자들이 모든 요구사항들을 명확하게 제시하지 않아도 됨"
      ],
      "answer": "4",
      "explanation": "폭포수 모형은 사용자가 모든 요구사항을 명확하게 제시해야 함",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
      "options": [
        "  1. Package Diagram",
        "  2. State Transition Diagram",
        "  3. Deployment Diagram",
        "  4. Entity-Relationship Diagram"
      ],
      "answer": "4",
      "explanation": "Entity-Relationship Diagram은 데이터베이스 설계에 사용되는 모델링 언어",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "미들웨어(Middleware)에 대한 설명으로 틀린 것은?",
      "options": [
        "  1. 여러 운영체제에서 응용 프로그램들 사이에 위치한 소프트웨어이다.",
        "  2. 미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 수 있어야 한다.",
        "  3. 소프트웨어 컴포넌트를 연결하기 위한 것임",
        "  4. 분산 컴퓨팅을 지원하기 위한 것임"
      ],
      "answer": "2",
      "explanation": "미들웨어의 서비스 이용을 위해 사용자가 정보 교환 방법 등의 내부 동작을 쉽게 확인할 필요는 없음",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "구조적 방법론의 구성 단계로 옳은 것은?",
      "options": [
        "  1. 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍",
        "  2. 요구사항 분석, 구조적 설계, 구조적 프로그래밍, 테스트",
        "  3. 구조적 분석, 구조적 설계, 구조적 프로그래밍, 유지보수",
        "  4. 요구사항 분석, 구조적 분석, 테스트, 유지보수"
      ],
      "answer": "1",
      "explanation": "구조적 방법론은 요구사항 분석, 구조적 분석, 구조적 설계, 구조적 프로그래밍 단계로 구성",
      "subject": "정보시스템구축관리"
    },
    {
      "question": "다음 중 병행수행으로 발생할 수 있는 문제점이 아닌 것은?",
      "options": [
        "  1. 갱신 분실(Lost Update)",
        "  2. 완료 의존성(Committed Dependency)",
        "  3. 모순성(Inconsistency)",
        "  4. 연쇄 복귀(Cascading Rollback)"
      ],
      "answer": "2",
      "explanation": "완료 의존성(Committed Dependency)은 병행수행으로 발생할 수 있는 문제점이 아닙니다.",
      "subject": "정보시스템구축관리"
    }
  ],
  "generation_summary": {
    "target_total": 25,
    "actual_total": 25,
    "success_rate": "100.0%",
    "successful_subjects": 5,
    "failed_subjects": 0,
    "completion_status": "COMPLETE",
    "generation_time": "407.3초"
  },
  "failed_subjects": [],
  "model_info": "Groq llama-4-scout-17b-16e-instruct"
}