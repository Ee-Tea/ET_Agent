{
  "exam_title": "정보처리기사 선택과목 모의고사 (2과목)",
  "total_questions": 30,
  "difficulty": "중급",
  "selected_subjects": [
    "소프트웨어설계",
    "데이터베이스구축"
  ],
  "questions_per_subject": 15,
  "subjects": {
    "소프트웨어설계": {
      "requested_count": 15,
      "actual_count": 15,
      "questions": [
        {
          "question": "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?",
          "options": [
            "  1. 클래스",
            "  2. 시퀀스",
            "  3. 서브루틴",
            "  4. 설계 원칙"
          ],
          "answer": "1",
          "explanation": "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?",
          "options": [
            "  1. 유효성",
            "  2. 직관성",
            "  3. 무결성",
            "  4. 유연성"
          ],
          "answer": "2",
          "explanation": "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?",
          "options": [
            "  1. GUI",
            "  2. CLI",
            "  3. CUI",
            "  4. MUI"
          ],
          "answer": "2",
          "explanation": "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?",
          "options": [
            "  1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.",
            "  2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.",
            "  3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.",
            "  4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."
          ],
          "answer": "2",
          "explanation": "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?",
          "options": [
            "  1. Adapter 패턴",
            "  2. Bridge 패턴",
            "  3. Builder 패턴",
            "  4. Proxy 패턴"
          ],
          "answer": "3",
          "explanation": "Builder 패턴은 생성 패턴에 속합니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?",
          "options": [
            "  1. 연상 코드",
            "  2. 블록 코드",
            "  3. 순차 코드",
            "  4. 표의 숫자 코드"
          ],
          "answer": "3",
          "explanation": "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?",
          "options": [
            "  1. EAI",
            "  2. FEP",
            "  3. GPL",
            "  4. Duplexing"
          ],
          "answer": "2",
          "explanation": "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 처리 시간을 줄여줍니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?",
          "options": [
            "  1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.",
            "  2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.",
            "  3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 컴포넌트들이 데이터를 관리하는 방식이다."
          ],
          "answer": "1",
          "explanation": "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?",
          "options": [
            "  1. 클래스",
            "  2. 객체",
            "  3. 용례",
            "  4. 패키지"
          ],
          "answer": "4",
          "explanation": "패키지는 사물과 관계를 구성하는 요소 중 하나가 아닌, 사물들을 그룹화하는 개념입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
          "options": [
            "  1. Package Diagram",
            "  2. State Transition Diagram",
            "  3. Deployment Diagram",
            "  4. ER Diagram"
          ],
          "answer": "4",
          "explanation": "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?",
          "options": [
            "  1. GUI",
            "  2. CLI",
            "  3. CUI",
            "  4. MUI"
          ],
          "answer": "2",
          "explanation": "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 것은?",
          "options": [
            "  1. Coad & Yourdon 방법",
            "  2. Booch 방법",
            "  3. Jacobson 방법",
            "  4. Wirfs-Brocks 방법"
          ],
          "answer": "3",
          "explanation": "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "자료 흐름도의 구성 요소로 옳은 것은?",
          "options": [
            "  1. process, data flow, data store, comment",
            "  2. process, data flow, data store, terminator",
            "  3. data flow, data store, terminator, data dictionary",
            "  4. process, data store, terminator, mini-spec"
          ],
          "answer": "2",
          "explanation": "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?",
          "options": [
            "  1. 요구사항",
            "  2. 설계",
            "  3. 구현",
            "  4. 테스트"
          ],
          "answer": "2",
          "explanation": "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.",
          "subject": "소프트웨어설계"
        },
        {
          "question": "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?",
          "options": [
            "  1. 시스템 구조",
            "  2. 설계 패턴",
            "  3. 아키텍처",
            "  4. 모듈화"
          ],
          "answer": "3",
          "explanation": "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.",
          "subject": "소프트웨어설계"
        }
      ],
      "status": "SUCCESS"
    },
    "데이터베이스구축": {
      "requested_count": 15,
      "actual_count": 15,
      "questions": [
        {
          "question": "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?",
          "options": [
            "  1. DBA",
            "  2. DBMS",
            "  3. DDL",
            "  4. DML"
          ],
          "answer": "1",
          "explanation": "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터 정의어(DDL)에 해당하는 것은?",
          "options": [
            "  1. SELECT",
            "  2. INSERT",
            "  3. UPDATE",
            "  4. CREATE"
          ],
          "answer": "4",
          "explanation": "CREATE는 데이터베이스의 정의에 사용되는 언어이다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터 모델의 구성 요소 중 데이터 구조에 따라 개념 세계나 컴퓨터 세계에서 실제로 표현된 값들을 처리하는 작업을 의미하는 것은?",
          "options": [
            "  1. Relation",
            "  2. Data Structure",
            "  3. Constraint",
            "  4. Operation"
          ],
          "answer": "4",
          "explanation": "Operation은 데이터 구조에 따라 개념 세계나 컴퓨터 세계에서 실제로 표현된 값들을 처리하는 작업을 의미한다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터 사전에 대한 설명으로 틀린 것은?",
          "options": [
            "  1. 시스템 카탈로그 또는 시스템 데이터베이스라고도 한다.",
            "  2. 데이터 사전 역시 데이터베이스의 일종이므로 일반 사용자가 생성 유지 및 수정할 수 있다.",
            "  3. 데이터베이스에 대한 데이터인 메타데이터를 저장하고 있다.",
            "  4. 데이터 사전에 있는 데이터에 실제로 접근하는 데 필요한 위치 정보는 데이터 디렉토리라는 곳에서 관리한다."
          ],
          "answer": "2",
          "explanation": "데이터 사전은 일반 사용자가 생성, 유지 및 수정할 수 없다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "키에 대한 설명으로 옳지 않은 것은?",
          "options": [
            "  1. 후보키는 개체들을 고유하게 식별할 수 있는 속성이다.",
            "  2. 슈퍼키는 한 개 이상의 속성들의 집합으로 구성된 키이다.",
            "  3. 외래키는 다른 테이블의 기본키로 사용되는 속성이다.",
            "  4. 대체키는 슈퍼키 중에서 기본키를 포함하는 키이다."
          ],
          "answer": "4",
          "explanation": "대체키는 슈퍼키 중에서 기본키를 제외한 나머지 키를 의미한다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "분산 데이터베이스 시스템에 대한 설명으로 틀린 것은?",
          "options": [
            "  1. 분산 데이터베이스는 논리적으로는 하나의 시스템에 속하지만 물리적으로는 여러 개의 컴퓨터 사이트에 분산되어 있다.",
            "  2. 분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.",
            "  3. 데이터베이스의 설계가 비교적 어렵고 개발 비용과 처리 비용이 증가한다는 단점이 있다.",
            "  4. 분산 데이터베이스 시스템의 주요 구성 요소는 P2P, 분산 처리기, 단일 데이터베이스 등이다."
          ],
          "answer": "4",
          "explanation": "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "OLAP(On-Line Analytical Processing) 연산이 아닌 것은?",
          "options": [
            "  1. ROLLUP",
            "  2. DRILL DOWN",
            "  3. PIVOT",
            "  4. INSERT"
          ],
          "answer": "4",
          "explanation": "INSERT는 OLAP 연산이 아니다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터베이스 이중화 구성에 대한 설명으로 옳은 것은?",
          "options": [
            "  1. 데이터베이스 이중화는 데이터베이스의 성능을 향상시키기 위한 방법이다.",
            "  2. 데이터베이스 이중화는 데이터베이스의 가용성을 향상시키기 위한 방법이다.",
            "  3. 데이터베이스 이중화는 데이터베이스의 보안성을 향상시키기 위한 방법이다.",
            "  4. 데이터베이스 이중화는 데이터베이스의 저장 용량을 증가시키기 위한 방법이다."
          ],
          "answer": "2",
          "explanation": "데이터베이스 이중화는 데이터베이스의 가용성을 향상시키기 위한 방법이다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터 모델의 종류에 해당하지 않는 것은?",
          "options": [
            "  1. 개념 데이터 모델",
            "  2. 논리적 데이터 모델",
            "  3. 물리적 데이터 모델",
            "  4. 수학적 데이터 모델"
          ],
          "answer": "4",
          "explanation": "수학적 데이터 모델은 데이터 모델의 종류에 해당하지 않는다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "DBMS의 장점이 아닌 것은?",
          "options": [
            "  1. 데이터의 공유",
            "  2. 데이터의 일관성 유지",
            "  3. 데이터의 보안",
            "  4. 데이터의 중복"
          ],
          "answer": "4",
          "explanation": "데이터의 중복은 DBMS의 단점이다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "다음 중 데이터 모델의 구성 요소가 아닌 것은?",
          "options": [
            "  1. 데이터 구조",
            "  2. 제약 조건",
            "  3. 연산",
            "  4. 사용자 인터페이스"
          ],
          "answer": "4",
          "explanation": "데이터 모델의 구성 요소는 데이터 구조, 제약 조건, 연산이다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터베이스의 논리적 구조와 물리적 구조를 정의하는 언어는?",
          "options": [
            "  1. DDL",
            "  2. DML",
            "  3. DCL",
            "  4. SQL"
          ],
          "answer": "1",
          "explanation": "DDL은 데이터 정의어로 데이터베이스의 구조를 정의, 변경, 삭제하는 데 사용됩니다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?",
          "options": [
            "  1. 요구 조건 분석",
            "  2. 개념적 설계",
            "  3. 논리적 설계",
            "  4. 물리적 설계"
          ],
          "answer": "3",
          "explanation": "논리적 설계 단계에서는 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계 등이 포함됩니다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "릴레이션의 차수가 4이고 카디널리티가 5이며, 릴레이션 S의 차수가 6이고 카디널리티가 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?",
          "options": [
            "  1. 24, 35",
            "  2. 24, 12",
            "  3. 10, 35",
            "  4. 10, 12"
          ],
          "answer": "1",
          "explanation": "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.",
          "subject": "데이터베이스구축"
        },
        {
          "question": "관계대수 연산자 중 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용하는 것은?",
          "options": [
            "  1. Select",
            "  2. Project",
            "  3. Join",
            "  4. Division"
          ],
          "answer": "1",
          "explanation": "Select 연산자는 조건을 만족하는 릴레이션의 수평적 부분집합을 구성하며, 기호는 σ입니다.",
          "subject": "데이터베이스구축"
        }
      ],
      "status": "SUCCESS"
    }
  },
  "all_questions": [
    {
      "question": "객체 지향 소프트웨어 공학에서 하나 이상의 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 것은?",
      "options": [
        "  1. 클래스",
        "  2. 시퀀스",
        "  3. 서브루틴",
        "  4. 설계 원칙"
      ],
      "answer": "1",
      "explanation": "클래스는 유사한 객체들을 묶어서 하나의 공통된 특성을 표현한 개념입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "UI 설계 원칙에서 누구나 쉽게 이해하고 사용할 수 있어야 한다는 것은?",
      "options": [
        "  1. 유효성",
        "  2. 직관성",
        "  3. 무결성",
        "  4. 유연성"
      ],
      "answer": "2",
      "explanation": "직관성은 사용자가 쉽게 이해하고 사용할 수 있는 인터페이스를 의미합니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "대표적으로 DOS, UNIX 등 운영체제에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?",
      "options": [
        "  1. GUI",
        "  2. CLI",
        "  3. CUI",
        "  4. MUI"
      ],
      "answer": "2",
      "explanation": "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "다음 중 애자일 소프트웨어 개발에 대한 설명으로 틀린 것은?",
      "options": [
        "  1. 공정과 도구보다 개인과의 상호작용을 더 가치 있게 여긴다.",
        "  2. 동작하는 소프트웨어보다는 포괄적인 문서를 가치 있게 여긴다.",
        "  3. 계약 협상보다는 고객과의 협력을 가치 있게 여긴다.",
        "  4. 계획을 따르기보다 변화에 대응하기를 가치 있게 여긴다."
      ],
      "answer": "2",
      "explanation": "애자일 소프트웨어 개발에서는 동작하는 소프트웨어를 문서보다 가치 있게 여깁니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "GoF(Gang of Four) 디자인 패턴을 생성, 구조, 행동 패턴의 세 그룹으로 분류할 때 구조 패턴이 아닌 것은?",
      "options": [
        "  1. Adapter 패턴",
        "  2. Bridge 패턴",
        "  3. Builder 패턴",
        "  4. Proxy 패턴"
      ],
      "answer": "3",
      "explanation": "Builder 패턴은 생성 패턴에 속합니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "코드 설계에서 일정한 일련번호를 부여하는 방식의 코드는?",
      "options": [
        "  1. 연상 코드",
        "  2. 블록 코드",
        "  3. 순차 코드",
        "  4. 표의 숫자 코드"
      ],
      "answer": "3",
      "explanation": "순차 코드는 일정한 일련번호를 부여하는 방식의 코드입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "입력되는 데이터를 컴퓨터의 프로세서가 처리하기 전에 미리 처리하여 프로세서가 처리하는 시간을 줄여주는 프로그램이나 하드웨어를 말하는 것은?",
      "options": [
        "  1. EAI",
        "  2. FEP",
        "  3. GPL",
        "  4. Duplexing"
      ],
      "answer": "2",
      "explanation": "FEP는 전처리 프로그램으로, 입력 데이터를 미리 처리하여 프로세서의 처리 시간을 줄여줍니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "소프트웨어 아키텍처와 관련한 설명으로 틀린 것은?",
      "options": [
        "  1. 파이프 필터 아키텍처에서 데이터는 파이프를 통해 양방향으로 흐르며 필터 이동 시 오버헤드가 발생하지 않는다.",
        "  2. 외부에서 인식할 수 있는 특성이 담긴 소프트웨어의 골격이 되는 기본 구조로 볼 수 있다.",
        "  3. 데이터 중심 아키텍처는 공유 데이터에 접근하는 컴포넌트들이 데이터를 관리하는 방식이다."
      ],
      "answer": "1",
      "explanation": "파이프 필터 아키텍처에서 데이터는 단방향으로 흐르며, 필터 이동 시 오버헤드가 발생할 수 있습니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "UML의 구성 요소에는 사물(Things), 관계(Relationships), 다이어그램 등이 포함된다. UML의 기본 구성 요소 중 사물에 포함되지 않는 것은?",
      "options": [
        "  1. 클래스",
        "  2. 객체",
        "  3. 용례",
        "  4. 패키지"
      ],
      "answer": "4",
      "explanation": "패키지는 사물과 관계를 구성하는 요소 중 하나가 아닌, 사물들을 그룹화하는 개념입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "정보공학 방법론에서 데이터베이스 설계의 표현으로 사용하는 모델링 언어는?",
      "options": [
        "  1. Package Diagram",
        "  2. State Transition Diagram",
        "  3. Deployment Diagram",
        "  4. ER Diagram"
      ],
      "answer": "4",
      "explanation": "ER Diagram은 데이터베이스 설계에 사용되는 모델링 언어입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "대표적으로 DOS, UNIX 등에서 조작을 위해 사용하던 것으로 정해진 명령 문자열을 입력하여 시스템을 조작하는 사용자 인터페이스는?",
      "options": [
        "  1. GUI",
        "  2. CLI",
        "  3. CUI",
        "  4. MUI"
      ],
      "answer": "2",
      "explanation": "CLI는 명령 줄 인터페이스로, 사용자가 명령어를 입력하여 시스템을 조작하는 인터페이스입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "객체지향 분석 방법론 중 다이어그램을 사용하여 객체의 행위를 분석하는 것은?",
      "options": [
        "  1. Coad & Yourdon 방법",
        "  2. Booch 방법",
        "  3. Jacobson 방법",
        "  4. Wirfs-Brocks 방법"
      ],
      "answer": "3",
      "explanation": "Jacobson 방법은 다이어그램을 사용하여 객체의 행위를 분석하는 방법입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "자료 흐름도의 구성 요소로 옳은 것은?",
      "options": [
        "  1. process, data flow, data store, comment",
        "  2. process, data flow, data store, terminator",
        "  3. data flow, data store, terminator, data dictionary",
        "  4. process, data store, terminator, mini-spec"
      ],
      "answer": "2",
      "explanation": "자료 흐름도의 구성 요소는 process, data flow, data store, terminator입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은?",
      "options": [
        "  1. 요구사항",
        "  2. 설계",
        "  3. 구현",
        "  4. 테스트"
      ],
      "answer": "2",
      "explanation": "소프트웨어의 내부 구조 및 동적 행위들을 정의하는 것은 설계 단계입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은?",
      "options": [
        "  1. 시스템 구조",
        "  2. 설계 패턴",
        "  3. 아키텍처",
        "  4. 모듈화"
      ],
      "answer": "3",
      "explanation": "소프트웨어 구성 요소인 모듈 간의 계층적 구성을 나타낸 것은 아키텍처입니다.",
      "subject": "소프트웨어설계"
    },
    {
      "question": "데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 지는 것은?",
      "options": [
        "  1. DBA",
        "  2. DBMS",
        "  3. DDL",
        "  4. DML"
      ],
      "answer": "1",
      "explanation": "DBA는 데이터베이스의 구성, 접근 방법, 관리 유지에 대한 모든 책임을 진다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터 정의어(DDL)에 해당하는 것은?",
      "options": [
        "  1. SELECT",
        "  2. INSERT",
        "  3. UPDATE",
        "  4. CREATE"
      ],
      "answer": "4",
      "explanation": "CREATE는 데이터베이스의 정의에 사용되는 언어이다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터 모델의 구성 요소 중 데이터 구조에 따라 개념 세계나 컴퓨터 세계에서 실제로 표현된 값들을 처리하는 작업을 의미하는 것은?",
      "options": [
        "  1. Relation",
        "  2. Data Structure",
        "  3. Constraint",
        "  4. Operation"
      ],
      "answer": "4",
      "explanation": "Operation은 데이터 구조에 따라 개념 세계나 컴퓨터 세계에서 실제로 표현된 값들을 처리하는 작업을 의미한다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터 사전에 대한 설명으로 틀린 것은?",
      "options": [
        "  1. 시스템 카탈로그 또는 시스템 데이터베이스라고도 한다.",
        "  2. 데이터 사전 역시 데이터베이스의 일종이므로 일반 사용자가 생성 유지 및 수정할 수 있다.",
        "  3. 데이터베이스에 대한 데이터인 메타데이터를 저장하고 있다.",
        "  4. 데이터 사전에 있는 데이터에 실제로 접근하는 데 필요한 위치 정보는 데이터 디렉토리라는 곳에서 관리한다."
      ],
      "answer": "2",
      "explanation": "데이터 사전은 일반 사용자가 생성, 유지 및 수정할 수 없다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "키에 대한 설명으로 옳지 않은 것은?",
      "options": [
        "  1. 후보키는 개체들을 고유하게 식별할 수 있는 속성이다.",
        "  2. 슈퍼키는 한 개 이상의 속성들의 집합으로 구성된 키이다.",
        "  3. 외래키는 다른 테이블의 기본키로 사용되는 속성이다.",
        "  4. 대체키는 슈퍼키 중에서 기본키를 포함하는 키이다."
      ],
      "answer": "4",
      "explanation": "대체키는 슈퍼키 중에서 기본키를 제외한 나머지 키를 의미한다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "분산 데이터베이스 시스템에 대한 설명으로 틀린 것은?",
      "options": [
        "  1. 분산 데이터베이스는 논리적으로는 하나의 시스템에 속하지만 물리적으로는 여러 개의 컴퓨터 사이트에 분산되어 있다.",
        "  2. 분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.",
        "  3. 데이터베이스의 설계가 비교적 어렵고 개발 비용과 처리 비용이 증가한다는 단점이 있다.",
        "  4. 분산 데이터베이스 시스템의 주요 구성 요소는 P2P, 분산 처리기, 단일 데이터베이스 등이다."
      ],
      "answer": "4",
      "explanation": "분산 데이터베이스 시스템의 주요 구성 요소는 분산 처리기, 분산 데이터베이스, 통신 네트워크이다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "OLAP(On-Line Analytical Processing) 연산이 아닌 것은?",
      "options": [
        "  1. ROLLUP",
        "  2. DRILL DOWN",
        "  3. PIVOT",
        "  4. INSERT"
      ],
      "answer": "4",
      "explanation": "INSERT는 OLAP 연산이 아니다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터베이스 이중화 구성에 대한 설명으로 옳은 것은?",
      "options": [
        "  1. 데이터베이스 이중화는 데이터베이스의 성능을 향상시키기 위한 방법이다.",
        "  2. 데이터베이스 이중화는 데이터베이스의 가용성을 향상시키기 위한 방법이다.",
        "  3. 데이터베이스 이중화는 데이터베이스의 보안성을 향상시키기 위한 방법이다.",
        "  4. 데이터베이스 이중화는 데이터베이스의 저장 용량을 증가시키기 위한 방법이다."
      ],
      "answer": "2",
      "explanation": "데이터베이스 이중화는 데이터베이스의 가용성을 향상시키기 위한 방법이다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터 모델의 종류에 해당하지 않는 것은?",
      "options": [
        "  1. 개념 데이터 모델",
        "  2. 논리적 데이터 모델",
        "  3. 물리적 데이터 모델",
        "  4. 수학적 데이터 모델"
      ],
      "answer": "4",
      "explanation": "수학적 데이터 모델은 데이터 모델의 종류에 해당하지 않는다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "DBMS의 장점이 아닌 것은?",
      "options": [
        "  1. 데이터의 공유",
        "  2. 데이터의 일관성 유지",
        "  3. 데이터의 보안",
        "  4. 데이터의 중복"
      ],
      "answer": "4",
      "explanation": "데이터의 중복은 DBMS의 단점이다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "다음 중 데이터 모델의 구성 요소가 아닌 것은?",
      "options": [
        "  1. 데이터 구조",
        "  2. 제약 조건",
        "  3. 연산",
        "  4. 사용자 인터페이스"
      ],
      "answer": "4",
      "explanation": "데이터 모델의 구성 요소는 데이터 구조, 제약 조건, 연산이다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터베이스의 논리적 구조와 물리적 구조를 정의하는 언어는?",
      "options": [
        "  1. DDL",
        "  2. DML",
        "  3. DCL",
        "  4. SQL"
      ],
      "answer": "1",
      "explanation": "DDL은 데이터 정의어로 데이터베이스의 구조를 정의, 변경, 삭제하는 데 사용됩니다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "데이터베이스 설계 단계 중 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계와 관계되는 것은?",
      "options": [
        "  1. 요구 조건 분석",
        "  2. 개념적 설계",
        "  3. 논리적 설계",
        "  4. 물리적 설계"
      ],
      "answer": "3",
      "explanation": "논리적 설계 단계에서는 저장 레코드 양식 설계, 레코드 집중의 분석 및 설계 접근 경로 설계 등이 포함됩니다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "릴레이션의 차수가 4이고 카디널리티가 5이며, 릴레이션 S의 차수가 6이고 카디널리티가 7일 때 두 개의 릴레이션을 카티션 프로덕트한 결과의 새로운 릴레이션의 차수와 카디널리티는 얼마인가?",
      "options": [
        "  1. 24, 35",
        "  2. 24, 12",
        "  3. 10, 35",
        "  4. 10, 12"
      ],
      "answer": "1",
      "explanation": "카티션 프로덕트의 결과로 생성되는 릴레이션의 차수는 두 릴레이션의 차수의 합이고, 카디널리티는 두 릴레이션의 카디널리티의 곱입니다.",
      "subject": "데이터베이스구축"
    },
    {
      "question": "관계대수 연산자 중 조건을 만족하는 릴레이션의 수평적 부분집합으로 구성하며, 연산자의 기호는 그리스 문자 시그마(σ)를 사용하는 것은?",
      "options": [
        "  1. Select",
        "  2. Project",
        "  3. Join",
        "  4. Division"
      ],
      "answer": "1",
      "explanation": "Select 연산자는 조건을 만족하는 릴레이션의 수평적 부분집합을 구성하며, 기호는 σ입니다.",
      "subject": "데이터베이스구축"
    }
  ],
  "generation_summary": {
    "target_total": 30,
    "actual_total": 30,
    "success_rate": "100.0%",
    "successful_subjects": 2,
    "failed_subjects": 0,
    "completion_status": "COMPLETE",
    "generation_time": "17.4초"
  },
  "failed_subjects": [],
  "model_info": "Groq llama-4-scout-17b-16e-instruct",
  "parallel_agents": 2
}