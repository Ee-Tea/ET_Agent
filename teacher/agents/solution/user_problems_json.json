{
  "timestamp": "2025-08-19T14:55:07.836424",
  "total_problems": 40,
  "problems": [
    {
      "question": "시스템 모델링에 대한 설명으로 틀린 것은?",
      "options": [
        "발팀이 응용 문제를 이해하는 데 도움을 줄 수 있다.",
        "유지보수 단계에서만 모델링 기법을 활용한다.",
        "발된 시스템에 대하여 여러 분야의 엔지니어들이 공동된 내용을 공유하는 데 도움을 준다.",
        "절차적인 프로그램을 위한 자료 흐름도는 프로세스 위주의 모델링 방법이다."
      ]
    },
    {
      "question": "UML 모델에서 한 객체가 다른 객체에게 오퍼레이션을 수행하도록 지정하는 의미적 관계로 옳은 것은?",
      "options": [
        "<보기1>",
        "<보기2>",
        "<보기3>",
        "<보기4>"
      ]
    },
    {
      "question": "마스터-슬레이브 프로세스 구조에 대한 설명으로 옳지 않은 것은?",
      "options": [
        "일반적으로 실시간 시스템에서 사용된다.",
        "마스터 프로세스는 일반적으로 연산, 통신, 조정을 책임진다.",
        "슬레이브 프로세스는 데이터 유지 기능을 수행할 수 없다.",
        "마스터 프로세스는 슬레이브 프로세스들을 제어할 수 있다."
      ]
    },
    {
      "question": "소프트웨어 개발에서 사용되는 모델링 방법론 중 객체 지향적 방법에 대한 설명으로 옳지 않은 것은?",
      "options": [
        "E-R 다이어그램을 사용하여 객체의 행위를 모델링한다.",
        "문제 도메인을 기능별로 나누어 수행하는 방법이다.",
        "체, 구조, 주제, 속성, 서비스 개념을 모두 사용하는 방법이다.",
        "Use-Case를 강조하여 사용하는 방법이다."
      ]
    },
    {
      "question": "소프트웨어 설계에서 객체의 행위를 분석하는 다이어그램은?",
      "options": [
        "클래스 다이어그램",
        "시퀀스 다이어그램",
        "유스케이스 다이어그램",
        "액티비티 다이어그램"
      ]
    },
    {
      "question": "다음은 UML에서 사용되는 다이어그램의 종류입니다. 순서도를 올바르게 나열한 것은?",
      "options": [
        "클래스 다이어그램",
        "유스케이스 다이어그램",
        "시퀀스 다이어그램",
        "상태 다이어그램"
      ]
    },
    {
      "question": "다음 중 소프트웨어 설계의 주요 항목이 아닌 것은?",
      "options": [
        "보기1",
        "보기2",
        "보기3",
        "보기4"
      ]
    },
    {
      "question": "소프트웨어 개발에서 가장 먼저 수행하는 작업은?",
      "options": [
        "화면 설계",
        "애플리케이션 설계",
        "이터베이스 설계",
        "트워크 설계"
      ]
    },
    {
      "question": "소프트웨어 아키텍처의 유형 중 '파이프 필터 아키텍처'에 대한 설명으로 옳은 것은?",
      "options": [
        "보기1",
        "보기2",
        "보기3",
        "보기4"
      ]
    },
    {
      "question": "파이프에 대한 설명으로 틀린 것은?",
      "options": [
        "이터는 파이프를 통해 단방향으로 흐른다.",
        "이터는 파이프를 통해 양 방향으로 흐른다.",
        "필터는 데이터를 변환하고 처리한다.",
        "파이프는 데이터를 저장하는 역할을 한다."
      ]
    },
    {
      "question": "다음 중 디자인 패턴과 그 설명이 올바르게 짝지어진 것을 모두 고른 것은?",
      "options": [
        "dapter 패턴",
        "ridge 패턴",
        "uilder 패턴",
        "Proxy 패턴"
      ]
    },
    {
      "question": "소프트웨어 설계에서 결합 도에 대한 설명으로 옳은 것은?",
      "options": [
        "<보기1>",
        "<보기2>",
        "<보기3>",
        "<보기4>"
      ]
    },
    {
      "question": "다음 중 결합도에 대한 설명으로 옳지 않은 것은?",
      "options": [
        "합도가 높을수록 소프트웨어의 유지보수가 쉽다.",
        "합도가 낮을수록 소프트웨어의 재사용성이 높다.",
        "합도는 모듈 간의 의존성을 나타낸다.",
        "합도는 모듈의 응집력을 나타낸다."
      ]
    },
    {
      "question": "객체지향 설계에서 다이어그램을 사용하여 객체의 행위를 표현 하는 것은?",
      "options": [
        "클래스 다이어그램",
        "시퀀스 다이어그램",
        "유스케이스 다이어그램",
        "상태 다이어그램"
      ]
    },
    {
      "question": "응집도에 대한 설명으로 옳은 것은",
      "options": [
        "응집도가 높 을수록 모 듈 의 재 사용성이 낮 다.",
        "응집도가 낮 을수록 모 듈 의 재 사용성이 높 다.",
        "응집도는 모 듈 의 내 부 응집 력 을 나 타낸 다.",
        "응집도는 모 듈 간의 결합력 을 나 타낸 다."
      ]
    },
    {
      "question": "다음 보기 중 소프트웨어 개발 생명주기 단계가 아닌 것은?",
      "options": [
        "테 스트",
        "리 뷰",
        "워크스 루",
        "컴파 일"
      ]
    },
    {
      "question": "시스템 간의 호환 성",
      "options": [
        "사용자의 편 의성",
        "소프트웨어의 유지보수",
        "하 드 웨어의 성능",
        "시스템 간의 호환 성"
      ]
    },
    {
      "question": "소프트웨어 아키텍처의 유형 중 '데이터 중 심 아키텍처'에 대한 설명으로 옳은 것은?",
      "options": [
        "<보기1>",
        "<보기2>",
        "<보기3>",
        "<보기4>"
      ]
    },
    {
      "question": "데이터 관리 방식에 대한 설명으로 옳지 않은 것은?",
      "options": [
        "이터는 중앙 집중식으로 관리된다.",
        "이터는 분산되어 관리된다.",
        "이터는 애플리케이션과 독립적이다.",
        "이터는 시스템의 일부이다."
      ]
    },
    {
      "question": "소프트웨어 패 키 징 의 정의로 가 장 적절한 것은?",
      "options": [
        "<보기1>",
        "<보기2>",
        "<보기3>",
        "<보기4>"
      ]
    },
    {
      "question": "소프트웨어 개발 과정에 해당하지 않는 것은?",
      "options": [
        "모듈별로 생성한 실행 파일을 묶어 배포용 설치파일을 만드는 것",
        "소프트웨어 개발 과정의 첫 단계",
        "사용자 요구사항을 분석하는 과정",
        "소프트웨어 테스트를 수행하는 과정"
      ]
    },
    {
      "question": "단위 테 스트(Unit Test)의 주목적인 것은?",
      "options": [
        "프로그램이 요구하는 사항을 충족하는지 확인하는 것",
        "프로그램의 성능을 측정하는 것",
        "프로그램의 보안 취약점을 찾는 것",
        "프로그램의 사용법을 문서화하는 것"
      ]
    },
    {
      "question": "개별 모 듈 이 정 확 하게 구 현되었 는지 확 인하는 것",
      "options": [
        "통 합 테 스트",
        "시스템 테 스트",
        "인수 테 스트",
        "별 모 듈 이 정 확 하게 구 현되었 는지 확 인하는 것"
      ]
    },
    {
      "question": "클리어링 하우스에 관한 설명으로 옳지 않은 것은?",
      "options": [
        "클리어링 하우스",
        "콘텐츠 제공자",
        "분배자(유통)",
        "소비자"
      ]
    },
    {
      "question": "다음 중 모형의 특징으로 옳은 것은?",
      "options": [
        "모형의 적용 경험 과 성공 사 례 가 많 음",
        "계별 정의가 분명하 고 , 전 체 공조의 이해가 용이",
        "계별 산 출물 이 정 확 하여 개발 공정의 기준 점 을 잘 제시",
        "발 과정 중에 발 생 하는 새 로 운 요구나 경험 을 설계에 반 영 하기 쉬 움"
      ]
    },
    {
      "question": "프로토타입 개발 방법의 장점이 아닌 것은?",
      "options": [
        "위 험 부담 감 소",
        "발 시간 단 축",
        "발 비용 절 감",
        "시스템 명세의 오 류 증 가"
      ]
    },
    {
      "question": "소프트웨어 재 사용 방법 중 합 성 중 심 방법에 해당하는 것은?",
      "options": [
        "보기1",
        "보기2",
        "보기3",
        "보기4"
      ]
    },
    {
      "question": "소프트웨어 개발 방법론에 대한 설명으로 틀린 것은?",
      "options": [
        "전 자 칩 과 같 은 소프트웨어 부품 , 즉 블 록(모 듈 )을 만들어서 끼 워 맞추 어 소프트웨어를 완 성시키는 방법",
        "추 상화 형태로 쓰 여진 명세를 구체화하여 프로그램을 만 드 는 방법",
        "소프트웨어 개발 과정을 테 스트하는 방법",
        "소프트웨어 결 과를 테 스트하는 방법"
      ]
    },
    {
      "question": "COCOMO 모형이 사용되는 목적은?",
      "options": [
        "소프트웨어 개발 비용 추정",
        "소프트웨어 개발 일정 추정",
        "소프트웨어 개발 위험 분석",
        "소프트웨어 개발 품질 평가"
      ]
    },
    {
      "question": "소프트웨어 개발 관련 요소 산정",
      "options": [
        "소프트웨어 개발 비용 산정",
        "소프트웨어 개발 시간 산정",
        "소프트웨어 개발 자원 산정",
        "소프트웨어 개발 위험 산정"
      ]
    },
    {
      "question": "소프트웨어 개발 규모 산정 방법에 대한 설명으로 틀린 것은?",
      "options": [
        "소프트웨어 개발 비용을 산정하는 방법",
        "소프트웨어 개발 시간을 산정하는 방법",
        "소프트웨어의 기능에 따라 점수를 부여하여 개발 규모를 산정하는 방법",
        "소프트웨어의 성능에 따라 점수를 부여하여 개발 규모를 산정하는 방법"
      ]
    },
    {
      "question": "내 장 형(Embedded Mode) 소프트웨어 개발 유형에 해당하는 것은?",
      "options": [
        "<보기1>",
        "<보기2>",
        "<보기3>",
        "<보기4>"
      ]
    },
    {
      "question": "소프트웨어 개발 유형에 대한 설명이다. 각 유형에 해당하는 설명을 고르시오.",
      "options": [
        "5만 라 인 이하의 소프트웨어를 개발하는 유형",
        "30만 라 인 이하의 소프트웨어를 개발하는 유형",
        "30만 라 인 이상의 초 대형 규 모의 트 랜잭 션 처리 시스템이나 운영 체제 등 을 개발하는 유형",
        "범 용 환경 에서 사용이 가능하도록 일반적인 배포 형태로 패 키 징 이 진행 되 는 유형"
      ]
    },
    {
      "question": "다음 중 SQL 명령어로 옳지 않은 것은?",
      "options": [
        "SELECT",
        "INSERT",
        "REATE",
        "UPDATE"
      ]
    },
    {
      "question": "DML에 속하는 명령어들은?",
      "options": [
        "SELECT",
        "INSERT",
        "UPDATE",
        "ELETE"
      ]
    },
    {
      "question": "SQL에서 데이터를 입력 하는 명 령 어는?",
      "options": [
        "INSERT",
        "SELECT",
        "UPDATE",
        "ELETE"
      ]
    },
    {
      "question": "다음 중 데이터베이스에서 데이터를 변경하는 명령어로만 이루어진 것들을 고르시오.",
      "options": [
        "INSERT INTO",
        "UPDATE",
        "ELETE FROM",
        "SELECT"
      ]
    },
    {
      "question": "SELECT 문의 기 본 구조로 옳은 것은?",
      "options": [
        "<보기1>",
        "<보기2>",
        "<보기3>",
        "<보기4>"
      ]
    },
    {
      "question": "다음은 SQL 명령문의 종류이다. 각 SQL 명령문의 형태를 올바르게 작성한 것을 보기에서 모두 고른 것은?",
      "options": [
        ", 2, 3",
        ", 2, 4",
        ", 3, 4",
        ", 3, 4"
      ]
    },
    {
      "question": "데이터베이스 구축에서 순서로 옳은 것은?",
      "options": [
        "이터 모델링",
        "이터베이스 구조 설계",
        "이터 사 전 작 성",
        "이터 변환"
      ]
    }
  ]
}